[{"D:\\Github\\PTUDWNC_CaroOnline\\caro_app\\src\\index.js":"1","D:\\Github\\PTUDWNC_CaroOnline\\caro_app\\src\\App.js":"2","D:\\Github\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\Home\\home.js":"3","D:\\Github\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\Navbar\\navbar.js":"4","D:\\Github\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\SignIn\\signin.js":"5","D:\\Github\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\Profile\\profile.js":"6","D:\\Github\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\SignUp\\signup.js":"7","D:\\Github\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\Dialogs\\InvitationDiallog\\index.js":"8","D:\\Github\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\Footer\\footer.js":"9","D:\\Github\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\GameList\\games.js":"10","D:\\Github\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\Game\\game.js":"11","D:\\Github\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\PlayedGame\\playedGame.js":"12","D:\\Github\\PTUDWNC_CaroOnline\\caro_app\\src\\utils\\helper.js":"13","D:\\Github\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\SnackBar\\snackbar.js":"14","D:\\Github\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\OnlineUsers\\onlineUsers_Primary.js":"15","D:\\Github\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\GameList\\gamelist.js":"16","D:\\Github\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\Dialogs\\PlayedGamesDialog\\index.js":"17","D:\\Github\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\Game\\gameServices.js":"18","D:\\Github\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\OnlineUsers\\onlineUsers_Secondary.js":"19","D:\\Github\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\Game\\board.js":"20","D:\\Github\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\Dialogs\\ChangePasswordDialog\\index.js":"21","D:\\Github\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\Dialogs\\ResetPasswordDialog\\index.js":"22","D:\\Github\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\Dialogs\\ImageUploadDialog\\index.js":"23","D:\\Github\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\GameList\\gameitem.js":"24","D:\\Github\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\Timer\\timer.js":"25","D:\\Github\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\Player\\player.js":"26","D:\\Github\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\Game\\square.js":"27","D:\\Github\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\ActiveDestination\\activeDestination.js":"28","D:\\Github\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\ResetDetination\\resetDestination.js":"29","D:\\Github\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\UserDetail\\userDetail.js":"30","D:\\Github\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\Ranking\\ranking.js":"31"},{"size":423,"mtime":1610122542793,"results":"32","hashOfConfig":"33"},{"size":3006,"mtime":1610554553789,"results":"34","hashOfConfig":"33"},{"size":5286,"mtime":1610554562270,"results":"35","hashOfConfig":"33"},{"size":4607,"mtime":1610122542781,"results":"36","hashOfConfig":"33"},{"size":10872,"mtime":1610558833842,"results":"37","hashOfConfig":"33"},{"size":13891,"mtime":1610555823392,"results":"38","hashOfConfig":"33"},{"size":5908,"mtime":1610122542786,"results":"39","hashOfConfig":"33"},{"size":2468,"mtime":1610503994751,"results":"40","hashOfConfig":"33"},{"size":1279,"mtime":1610122542778,"results":"41","hashOfConfig":"33"},{"size":7201,"mtime":1610537665181,"results":"42","hashOfConfig":"33"},{"size":26186,"mtime":1610558257334,"results":"43","hashOfConfig":"33"},{"size":8490,"mtime":1610524764533,"results":"44","hashOfConfig":"33"},{"size":1264,"mtime":1610122542793,"results":"45","hashOfConfig":"33"},{"size":1551,"mtime":1610503994757,"results":"46","hashOfConfig":"33"},{"size":4710,"mtime":1610122542782,"results":"47","hashOfConfig":"33"},{"size":345,"mtime":1610122542780,"results":"48","hashOfConfig":"33"},{"size":4467,"mtime":1610555794556,"results":"49","hashOfConfig":"33"},{"size":7348,"mtime":1610213485058,"results":"50","hashOfConfig":"33"},{"size":5747,"mtime":1610122542782,"results":"51","hashOfConfig":"33"},{"size":889,"mtime":1610122542779,"results":"52","hashOfConfig":"33"},{"size":6651,"mtime":1610122542776,"results":"53","hashOfConfig":"33"},{"size":3799,"mtime":1610122542778,"results":"54","hashOfConfig":"33"},{"size":1958,"mtime":1610122542776,"results":"55","hashOfConfig":"33"},{"size":4349,"mtime":1610503994754,"results":"56","hashOfConfig":"33"},{"size":635,"mtime":1610528428739,"results":"57","hashOfConfig":"33"},{"size":1704,"mtime":1610556310524,"results":"58","hashOfConfig":"33"},{"size":322,"mtime":1607184421669,"results":"59","hashOfConfig":"33"},{"size":1433,"mtime":1610554427733,"results":"60","hashOfConfig":"33"},{"size":5926,"mtime":1610554468311,"results":"61","hashOfConfig":"33"},{"size":7336,"mtime":1610555853120,"results":"62","hashOfConfig":"33"},{"size":3654,"mtime":1610560475469,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"yhvsdj",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"66"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"66"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"66"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"66"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"66"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"66"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"66"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Github\\PTUDWNC_CaroOnline\\caro_app\\src\\index.js",[],["134","135"],"D:\\Github\\PTUDWNC_CaroOnline\\caro_app\\src\\App.js",[],"D:\\Github\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\Home\\home.js",[],"D:\\Github\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\Navbar\\navbar.js",["136"],"import React, { useEffect } from 'react';\r\nimport { NavLink, useHistory, Link } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport logo from '../../images/caro.ico';\r\nimport config from '../../constants/config.json';\r\nconst API_URL = config.API_URL_TEST;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  icon: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  navLink: {\r\n    textDecoration: 'none',\r\n    paddingLeft: '5px'\r\n  },\r\n  button: {\r\n    color: 'white',\r\n    background: 'purple'\r\n  },\r\n  logo: {\r\n    width: '25px',\r\n    height: '25px',\r\n    marginRight: '10px'\r\n  }\r\n}));\r\n\r\nexport default function Navbar({ socket, isLoggedIn, setIsLoggedIn }) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const userID = localStorage.getItem('userID');\r\n  const token = localStorage.getItem('jwtToken');\r\n\r\n  useEffect(() => {\r\n    function storageChange(event) {\r\n      if (event.key === 'jwtToken') {\r\n        if (event.newValue === null) {\r\n          setIsLoggedIn(false);\r\n          socket.emit('client_LoggedOut', { userID });\r\n          history.push('/signin');\r\n          return;\r\n\r\n        } else {\r\n          setIsLoggedIn(true);\r\n          history.push('/');\r\n          return;\r\n        }\r\n      }\r\n    }\r\n    window.addEventListener('storage', storageChange);\r\n    return () => {\r\n      window.removeEventListener('storage', storageChange);\r\n    }\r\n  }, []);\r\n\r\n  const logoutButtonClicked = async () => {\r\n    const data = {\r\n      userID\r\n    }\r\n    const res = await fetch(`${API_URL}/users/signout`, {\r\n      method: 'POST',\r\n      body: JSON.stringify(data),\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n        'Content-Type': 'application/json',\r\n      }\r\n    });\r\n    if (res.status === 400) {\r\n      const result = await res.json();\r\n      alert(result.mesg);\r\n\r\n    }\r\n    else { // other status: 200, 401, ...\r\n      setIsLoggedIn(false);\r\n      localStorage.removeItem('jwtToken');\r\n      localStorage.clear();\r\n      history.push('/');\r\n\r\n      if (res.status === 200) // only status 200\r\n      {\r\n        socket.emit('client_LoggedOut', { userID: data.userID });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <AppBar position=\"static\" color=\"primary\">\r\n        <Toolbar>\r\n          <NavLink to=\"/\" style={{ display: 'inline-block', textDecoration: 'none', color: \"white\" }}>\r\n            <img className={classes.logo} src={logo} alt=\"This is my website logo\"></img>\r\n          </NavLink>\r\n\r\n          <Typography variant=\"h6\" color=\"inherit\" noWrap style={{ flex: 1 }}>\r\n            <NavLink to=\"/\" style={{ display: 'inline-block', textDecoration: 'none', color: \"white\" }}>\r\n              Caro Tournament\r\n            </NavLink>\r\n          </Typography>\r\n\r\n          <div>\r\n            <Link to='/' className={classes.navLink}>\r\n              <Button variant=\"contained\" color=\"secondary\">\r\n                Home\r\n              </Button>\r\n            </Link>\r\n            <NavLink to='/games' className={classes.navLink}>\r\n              <Button variant=\"contained\" color=\"secondary\">\r\n                Games\r\n              </Button>\r\n            </NavLink>\r\n\r\n            {isLoggedIn ?\r\n              <React.Fragment>\r\n                <NavLink to='/profile' className={classes.navLink}>\r\n                  <Button variant=\"contained\" color=\"secondary\">\r\n                    Profile\r\n                </Button>\r\n                </NavLink>\r\n                <NavLink to='/' className={classes.navLink}>\r\n                  <Button variant=\"contained\" color=\"secondary\" onClick={logoutButtonClicked}>\r\n                    Sign Out\r\n                </Button>\r\n                </NavLink>\r\n              </React.Fragment> :\r\n              <React.Fragment>\r\n                <NavLink to='/signIn' className={classes.navLink}>\r\n                  <Button variant=\"contained\" color=\"secondary\">\r\n                    Sign In\r\n                </Button>\r\n                </NavLink>\r\n                <NavLink to='/signUp' className={classes.navLink}>\r\n                  <Button variant=\"contained\" color=\"secondary\">\r\n                    Sign Up\r\n                </Button>\r\n                </NavLink>\r\n              </React.Fragment>}\r\n\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","D:\\Github\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\SignIn\\signin.js",["137"],"D:\\Github\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\Profile\\profile.js",["138","139","140"],"D:\\Github\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\SignUp\\signup.js",[],"D:\\Github\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\Dialogs\\InvitationDiallog\\index.js",["141"],"import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function InvitationDialog({ socket }) {\r\n  const userID = localStorage.getItem('userID');\r\n  const history = useHistory();\r\n  const [open, setOpen] = useState(false);\r\n  const [hostName, setHostName] = useState(\"\");\r\n  const [gameID, setGameID] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    socket.on(`invite_${userID}`, data => {\r\n      setHostName(data.hostName);\r\n      setGameID(data.gameID);\r\n      setOpen(true);\r\n    });\r\n  }, [userID]);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setHostName(\"\");\r\n    setGameID(\"\")\r\n  };\r\n\r\n  const handleJoinGame = () => {\r\n    setOpen(false);\r\n    history.push('/games/' + gameID);\r\n    socket.emit(\"join_game\", { gameID: gameID, userID });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {/* <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Slide in alert dialog\r\n      </Button> */}\r\n      <Dialog\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\"><Typography variant=\"h4\">{`Invitation`}</Typography></DialogTitle>\r\n        <DialogContent >\r\n          <DialogContentText id=\"alert-dialog-slide-description\" style={{ fontSize: '18px' }}>\r\n            <b>{hostName}</b> wants you to join the room\r\n            <br />\r\n            {gameID}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleJoinGame} color=\"secondary\">\r\n            Agree\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Disagree\r\n          </Button>\r\n\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Github\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\Footer\\footer.js",[],"D:\\Github\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\GameList\\games.js",["142","143","144"],"D:\\Github\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\Game\\game.js",["145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165"],"D:\\Github\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\PlayedGame\\playedGame.js",["166","167","168","169","170","171"],"D:\\Github\\PTUDWNC_CaroOnline\\caro_app\\src\\utils\\helper.js",[],"D:\\Github\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\SnackBar\\snackbar.js",[],"D:\\Github\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\OnlineUsers\\onlineUsers_Primary.js",["172"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport MinimizeIcon from '@material-ui/icons/Minimize';\r\nimport List from '@material-ui/core/List';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Input from '@material-ui/core/Input';\r\nimport FaceIcon from '@material-ui/icons/Face';\r\nimport Badge from '@material-ui/core/Badge';\r\n\r\nconst StyledBadge = withStyles((theme) => ({\r\n  badge: {\r\n    right: 5,\r\n    top: 30,\r\n    border: `1px solid ${theme.palette.background.paper}`,\r\n    padding: '0 4px',\r\n    background: ' green',\r\n  },\r\n}))(Badge);\r\n\r\nconst drawerWidth = 300;\r\nconst useStyles = makeStyles((theme) => ({\r\n  list: {\r\n    position: \"fixed\",\r\n    right: 30,\r\n    bottom: 0,\r\n    border: '2px solid grey',\r\n    borderBottomWidth: '0',\r\n    width: '300px',\r\n    borderRadius: '8px 8px 0 0',\r\n    maxHeight: '80%',\r\n    // overflowY: 'scroll',\r\n    overflow: 'auto',\r\n    background: '#f2f2f2'\r\n  },\r\n  card: {\r\n    position: \"fixed\",\r\n    right: 30,\r\n    bottom: 0,\r\n    border: `1px solid #3f51b5`,\r\n    borderRadius: '5px 5px 0 0',\r\n    width: '300px',\r\n    height: '50px',\r\n    background: '#3f51b5',\r\n    cursor: 'pointer',\r\n    display: 'inline-block',\r\n    color: 'white',\r\n    padding: '15px',\r\n    fontWeight: 'bold',\r\n  },\r\n\r\n  paperShadow: {\r\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)'\r\n  },\r\n\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-start',\r\n  },\r\n  floatLeft: {\r\n    float: 'left'\r\n  },\r\n  floatRight: {\r\n    float: 'right'\r\n  }\r\n\r\n}));\r\n\r\nexport default function OnlineUsers({ onlineUserList }) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const [searchString, setSearchString] = useState(\"\");\r\n  const [onlineUserListCopy, setOnlineUserListCopy] = useState([]);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setSearchString(\"\");\r\n    setOpen(true);\r\n  }\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n\r\n  }\r\n  useEffect(() => {\r\n    setOnlineUserListCopy(onlineUserList.slice());\r\n  }, [onlineUserList]);\r\n\r\n  useEffect(() => {\r\n    if (searchString !== \"\")// có nội dung cần tìm\r\n    {\r\n      // console.log(\"v\");\r\n      setOnlineUserListCopy(onlineUserListCopy.slice()\r\n        .filter(user => user.Name.toLowerCase().includes(searchString.toLowerCase())))\r\n    }\r\n    else {\r\n      setOnlineUserListCopy(onlineUserList);\r\n    }\r\n  }, [searchString, onlineUserList]); // 2nd dependency help make sure new client connects will not make filtered list wrong\r\n\r\n\r\n  return (\r\n    <>\r\n      {open ?\r\n        <div className={`${classes.list} ${classes.paperShadow}`}>\r\n          <div className={classes.drawerHeader}>\r\n            <Input\r\n              placeholder=\"Username here\"\r\n              onChange={(event) => { setSearchString(event.target.value) }}\r\n              fullWidth\r\n              style={{ position: 'sticky' }}\r\n            />\r\n            <IconButton onClick={handleDrawerClose}>\r\n              <MinimizeIcon />\r\n            </IconButton>\r\n          </div>\r\n          <List >\r\n            {onlineUserListCopy.length === 0 ?\r\n              <div >No user found</div>\r\n              :\r\n              onlineUserListCopy.map((item) => (\r\n                <ListItem key={item.ID}>\r\n                  <ListItemIcon >\r\n                    <StyledBadge badgeContent={\"\"} >\r\n                      <FaceIcon fontSize=\"large\" />\r\n                    </StyledBadge>\r\n                  </ListItemIcon>\r\n                  <ListItemText primary={item.Name} />\r\n                  {/* <Button variant=\"outlined\" style={{ fontSize: '12px', borderRadius: '5px', padding: '2px' }}>Invite</Button> */}\r\n                </ListItem>\r\n              ))}\r\n          </List>\r\n        </div>\r\n        :\r\n        <div className={`${classes.card} ${classes.paperShadow}`} onClick={() => handleDrawerOpen()}>\r\n          <div className={classes.floatLeft}>\r\n            Online Users\r\n          </div>\r\n          <div className={classes.floatRight} style={{ marginRight: '10px' }}>\r\n            <Badge badgeContent={onlineUserList.length} color=\"secondary\" />\r\n          </div>\r\n        </div>\r\n      }\r\n\r\n    </>\r\n\r\n  );\r\n}\r\n","D:\\Github\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\GameList\\gamelist.js",[],"D:\\Github\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\Dialogs\\PlayedGamesDialog\\index.js",["173","174"],"D:\\Github\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\Game\\gameServices.js",[],"D:\\Github\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\OnlineUsers\\onlineUsers_Secondary.js",["175"],"import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\r\nimport Input from '@material-ui/core/Input';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport FaceIcon from '@material-ui/icons/Face';\r\nimport Badge from '@material-ui/core/Badge';\r\n\r\nconst StyledBadge = withStyles((theme) => ({\r\n  badge: {\r\n    right: 5,\r\n    top: 30,\r\n    border: `1px solid ${theme.palette.background.paper}`,\r\n    padding: '0 4px',\r\n    background: ' green',\r\n  },\r\n}))(Badge);\r\n\r\nconst drawerWidth = 300;\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginRight: drawerWidth,\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-start',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginRight: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginRight: 0,\r\n  },\r\n}));\r\n\r\nexport default function OnlineUsers({ socket, gameID, onlineUserList, observers, }) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const [searchString, setSearchString] = useState(\"\");\r\n  const [onlineUserListCopy, setOnlineUserListCopy] = useState([]);\r\n  const userID = localStorage.getItem(\"userID\");\r\n\r\n  const handleDrawerOpen = () => {\r\n    setSearchString(\"\");\r\n    setOpen(true);\r\n  }\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n\r\n  }\r\n\r\n  const handleUserInvitaion = (id) => {\r\n    const hostName = localStorage.getItem('name');\r\n    socket.emit(`invite`, { hostName, gameID, userID: id });\r\n  }\r\n  useEffect(() => {\r\n    setOnlineUserListCopy(onlineUserList.slice());\r\n  }, [onlineUserList]);\r\n\r\n  useEffect(() => {\r\n    if (searchString !== \"\") {// có nội dung cần tìm\r\n      setOnlineUserListCopy(onlineUserListCopy.slice()\r\n        .filter(user => user.Name.toLowerCase().includes(searchString.toLowerCase())))\r\n    } else {\r\n      setOnlineUserListCopy(onlineUserList);\r\n    }\r\n  }, [searchString, onlineUserList]); // 2nd dependency help make sure new client connects will not make filtered list wrong\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton color=\"inherit\" aria-label=\"open drawer\" edge=\"end\"\r\n        onClick={handleDrawerOpen} className={clsx(open && classes.hide)}\r\n        style={{\r\n          position: 'absolute',\r\n          top: -10,\r\n          right: 25,\r\n          zIndex: 1,\r\n          alignContent: 'center',\r\n          fontSize: '4',\r\n          borderRadius: '50%',\r\n          height: '60px',\r\n          width: '60px',\r\n          color: '#FFF',\r\n          backgroundImage: 'linear-gradient(to right, #24C6DC 0%, #514A9D 100%)',\r\n          boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\r\n        }}\r\n      >\r\n        <GroupAddIcon />\r\n      </IconButton>\r\n      <Drawer className={classes.drawer} variant=\"temporary\" anchor=\"right\"\r\n        open={open} classes={{ paper: classes.drawerPaper }} onClose={handleDrawerClose}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <CloseIcon />\r\n          </IconButton>\r\n          <Input placeholder=\"Username here\"\r\n            onChange={(event) => { setSearchString(event.target.value) }}\r\n          />\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          {onlineUserListCopy.map((user) => (\r\n            <ListItem key={user.ID}>\r\n              <ListItemIcon >\r\n                <StyledBadge badgeContent={\"\"} >\r\n                  <FaceIcon fontSize=\"large\" />\r\n                </StyledBadge>\r\n              </ListItemIcon>\r\n              <ListItemText primary={user.Name} />\r\n              {user.ID !== userID ?\r\n                <Button variant=\"outlined\" style={{ fontSize: '12px', borderRadius: '5px', padding: '2px' }}\r\n                  onClick={() => handleUserInvitaion(user.ID)}>\r\n                  Invite\r\n                  </Button>\r\n                :\r\n                <></>\r\n              }\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Github\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\Game\\board.js",[],"D:\\Github\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\Dialogs\\ChangePasswordDialog\\index.js",["176","177","178","179","180"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport SimpleSnackbar from '../../SnackBar/snackbar';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport { isBlankString } from '../../../utils/helper'; //'../../../utils/index'\r\nimport config from '../../../constants/config.json';\r\nconst API_URL = config.API_URL_TEST;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n\tcontainer: {\r\n\t\tdisplay: 'inline-block',\r\n\t\twidth: '100%'\r\n\t},\r\n\tfloatRight: {\r\n\t\tfloat: \"right\",\r\n\t\twidth: '60%'\r\n\t},\r\n\tfloatLeft: {\r\n\t\tfloat: \"left\",\r\n\t\twidth: '40%'\r\n\t},\r\n\tpaperLikeShadow: {\r\n\t\tboxShadow: '0 4px 8px 5px rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\r\n\t},\r\n\thidden: {\r\n\t\tdisplay: 'none'\r\n\t}\r\n}));\r\n\r\nexport default function FormDialog(/*{ setShowSnackBar, contents, setContents }*/) {\r\n\tconst classes = useStyles();\r\n\tconst userID = localStorage.getItem('userID');\r\n\tconst token = window.localStorage.getItem('jwtToken');\r\n\tconst [open, setOpen] = useState(false);\r\n\tconst [currentPassword, setCurrentPassword] = useState(\"\");\r\n\tconst [newPassword, setNewPassword] = useState(\"\");\r\n\tconst [validCurentPassword, setValidCurentPassword] = useState(false);\r\n\tconst [validNewPassword, setValidNewPassword] = useState(false);\r\n\tconst [showSnackbar, setShowSnackBar] = useState(false);\r\n\tconst [contents, setContents] = useState([\r\n\t\t{ id: 4, msg: \"Password can't be empty!!!\" },\r\n\t\t{ id: 5, msg: \"New password can't be empty!!!\" },\r\n\t]);\r\n\r\n\tconst handleCurrentPasswordChange = (currentPassword) => {\r\n\t\tsetCurrentPassword(currentPassword);\r\n\t\tif (isBlankString(currentPassword)) {\r\n\t\t\tsetContents(contents => [...contents.filter(content => content.id != 4), { id: 4, msg: \"Password can't be empty!!!\" }]);\r\n\t\t\tsetValidCurentPassword(false);\r\n\t\t} else if (currentPassword.length < 6) {\r\n\t\t\tsetContents(contents => [...contents.filter(content => content.id != 4), { id: 4, msg: \"Password must have at least 6 characters!!!\" }]);\r\n\t\t\tsetValidCurentPassword(false);\r\n\t\t} else {\r\n\t\t\tsetContents(contents.filter(content => content.id !== 4));\r\n\t\t\tsetValidCurentPassword(true);\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleNewPasswordChange = (newPassword) => {\r\n\t\tsetNewPassword(newPassword);\r\n\t\tif (isBlankString(newPassword)) {\r\n\t\t\tsetContents(contents => [...contents.filter(content => content.id != 5), { id: 5, msg: \"New password can't be empty!!!\" }]);\r\n\t\t\tsetValidNewPassword(false);\r\n\t\t} else if (newPassword.length < 6) {\r\n\t\t\tsetContents(contents => [...contents.filter(content => content.id != 5), { id: 5, msg: \"New password must have at least 6 characters!!!\" }]);\r\n\t\t\tsetValidNewPassword(false);\r\n\t\t} else {\r\n\t\t\tsetContents(contents.filter(content => content.id !== 5));\r\n\t\t\tsetValidNewPassword(true);\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleClickOpen = () => {\r\n\t\tsetOpen(true);\r\n\t\tsetContents([\r\n\t\t\t{ id: 4, msg: \"Password can't be empty!!!\" },\r\n\t\t\t{ id: 5, msg: \"New password can't be empty!!!\" },\r\n\t\t]);\r\n\t}\r\n\r\n\tconst handleClose = () => {\r\n\t\tsetOpen(false);\r\n\t\tsetCurrentPassword(\"\");\r\n\t\tsetNewPassword(\"\");\r\n\t\tsetShowSnackBar(false);\r\n\t}\r\n\r\n\tconst handleChangePassword = async (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tif (!validCurentPassword || !validNewPassword) {\r\n\t\t\t// if (!validCurentPassword) {\r\n\t\t\t// \tif (!contents.includes({ id: 4, msg: \"Password can't be empty!!!\" })) {\r\n\t\t\t// \t\tsetContents(contents => [...contents, { id: 4, msg: \"Password can't be empty!!!\" }]);\r\n\t\t\t// \t}\r\n\t\t\t// \telse setContents(contents.filter(content => content.id !== 4));\r\n\t\t\t// }\r\n\t\t\t// if (!validNewPassword) {\r\n\t\t\t// \tif (!contents.includes({ id: 5, msg: \"New password can't be empty!!!\" })) {\r\n\t\t\t// \t\tsetContents(contents => [...contents, { id: 5, msg: \"New password can't be empty!!!\" }]);\r\n\t\t\t// \t}\r\n\t\t\t// \telse setContents(contents.filter(content => content.id !== 5));\r\n\t\t\t// }\r\n\t\t\tsetShowSnackBar(true);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst data = {\r\n\t\t\t\tCurrentPassword: currentPassword,\r\n\t\t\t\tNewPassword: newPassword\r\n\t\t\t}\r\n\t\t\tconst res = await fetch(`${API_URL}/users/profile/updatepassword/${userID}`, {\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t\tAuthorization: `Bearer ${token}`\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify(data),\r\n\t\t\t});\r\n\r\n\t\t\t// const result = await res.json();\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tsetShowSnackBar(true);\r\n\t\t\t} else {\r\n\t\t\t\tsetShowSnackBar(true);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<SimpleSnackbar open={showSnackbar} setOpen={(isOpen) => setShowSnackBar(isOpen)} contents={contents} />\r\n\r\n\t\t\t<Button fullWidth variant=\"outlined\" color=\"secondary\" onClick={handleClickOpen} startIcon={<SaveIcon />}>\r\n\t\t\t\tChange password\r\n      </Button>\r\n\t\t\t<Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n\t\t\t\t<form >\r\n\t\t\t\t\t<DialogTitle id=\"form-dialog-title\">Change password</DialogTitle>\r\n\t\t\t\t\t<DialogContent>\r\n\t\t\t\t\t\t<div className={classes.container}>\r\n\t\t\t\t\t\t\t<Typography className={classes.floatLeft} align=\"left\" component=\"h2\"><b> Current password:</b> </Typography>\r\n\t\t\t\t\t\t\t{validCurentPassword ?\r\n\t\t\t\t\t\t\t\t<></>\r\n\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t<Typography className={classes.floatRight} align=\"right\" style={{ color: \"red\" }}>Invalid</Typography>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<TextField variant=\"outlined\" autoFocus margin=\"normal\" type=\"password\" fullWidth\r\n\t\t\t\t\t\t\tonChange={(event) => { handleCurrentPasswordChange(event.target.value); }}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t<div className={classes.container}>\r\n\t\t\t\t\t\t\t<Typography className={classes.floatLeft} align=\"left\" component=\"h2\"><b> New password:</b> </Typography>\r\n\t\t\t\t\t\t\t{validNewPassword ?\r\n\t\t\t\t\t\t\t\t<></>\r\n\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t<Typography className={classes.floatRight} align=\"right\" style={{ color: \"red\" }}>Invalid</Typography>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<TextField variant=\"outlined\" margin=\"normal\" type=\"password\" fullWidth\r\n\t\t\t\t\t\t\tonChange={(event) => { handleNewPasswordChange(event.target.value); }}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Typography>Password must have at least 6 characters</Typography>\r\n\r\n\t\t\t\t\t</DialogContent>\r\n\t\t\t\t\t<DialogActions>\r\n\t\t\t\t\t\t<Button onClick={handleChangePassword} color=\"secondary\">\r\n\t\t\t\t\t\t\tUpdate\r\n            </Button>\r\n\t\t\t\t\t\t<Button onClick={handleClose} color=\"primary\">\r\n\t\t\t\t\t\t\tCancel\r\n           </Button>\r\n\t\t\t\t\t</DialogActions>\r\n\t\t\t\t</form>\r\n\t\t\t</Dialog>\r\n\t\t</div>\r\n\t);\r\n}\r\n","D:\\Github\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\Dialogs\\ResetPasswordDialog\\index.js",["181"],"import React, { useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { InformationSnackbar } from '../../SnackBar/snackbar';\r\nimport { isEmailPattern, isBlankString, containsBlank } from '../../../utils/helper';\r\nimport config from '../../../constants/config.json';\r\n\r\nconst API_URL = config.API_URL_TEST;\r\n\r\nexport default function ResetPasswordDialog() {\r\n  const userID = localStorage.getItem('userID');\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [usernameInput, setUsernameInput] = useState(\"\");\r\n  const [emailInput, setEmailInput] = useState(\"\");\r\n  const [showSnackbar, setShowSnackBar] = useState(false);\r\n  const [content, setContent] = useState(\"\");\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleSendEmail = async () => {\r\n\r\n    if (isBlankString(emailInput) || isBlankString(usernameInput)) {\r\n      setContent(\"Input can not be empty.\");\r\n      setShowSnackBar(true);\r\n      return;\r\n    }\r\n    if (containsBlank(usernameInput)) {\r\n      setContent(\"Username can not contain blank space.\");\r\n      setShowSnackBar(true);\r\n      return;\r\n    }\r\n    if (isEmailPattern(emailInput) === false) {\r\n      setContent(\"Email is not valid.\");\r\n      setShowSnackBar(true);\r\n      return;\r\n    }\r\n    const data = {\r\n      Username: usernameInput,\r\n      Email: emailInput\r\n    }\r\n    const res = await fetch(`${API_URL}/forgotpassword`, {\r\n      method: 'POST',\r\n      body: JSON.stringify(data),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n\r\n    if (res.status === 200) {\r\n      const result = await res.json();\r\n      setContent(result.msg);\r\n      setShowSnackBar(true);\r\n      setOpen(false);\r\n    } else {\r\n      const result = await res.json();\r\n      setContent(result.msg);\r\n      setShowSnackBar(true);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <InformationSnackbar open={showSnackbar} setOpen={(isOpen) => setShowSnackBar(isOpen)} content={content} />\r\n      <Link onClick={handleClickOpen} variant=\"body2\" style={{ cursor: 'pointer ' }}>\r\n        {\"Forgot password?\"}\r\n      </Link>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Reset password</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            To reset to your password, please enter your username and <b>valid email</b> address here. Then you need to check this mail for further information.\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            label=\"Username\"\r\n            fullWidth\r\n            value={usernameInput}\r\n            onChange={(e) => setUsernameInput(e.target.value)}\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            label=\"Email Address\"\r\n            type=\"email\"\r\n            fullWidth\r\n            value={emailInput}\r\n            onChange={(e) => setEmailInput(e.target.value)}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleSendEmail} color=\"secondary\">\r\n            Send\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Github\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\Dialogs\\ImageUploadDialog\\index.js",[],"D:\\Github\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\GameList\\gameitem.js",[],"D:\\Github\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\Timer\\timer.js",["182","183","184"],"import React, { useState, useEffect } from 'react';\r\nimport config from '../../constants/config.json';\r\n\r\nconst API_URL = config.API_URL_TEST;\r\nlet myTimeout = null;\r\n\r\nfunction Timer({ counter, setCounter }) {\r\n  useEffect(() => {\r\n    clearTimeout(myTimeout);\r\n    if (counter > 0) {\r\n      myTimeout = setTimeout(() => {\r\n        if (counter > 0) {\r\n          setCounter(counter - 1);\r\n        }\r\n      }, 1000);\r\n    } else {\r\n      setCounter(0);\r\n    }\r\n  }, [counter]);\r\n\r\n  return (\r\n    <div style={{ fontSize: '24px', fontWeight: 'bold', margin: '10px' }}>\r\n      Time: {counter}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Timer;","D:\\Github\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\Player\\player.js",[],"D:\\Github\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\Game\\square.js",[],"D:\\Github\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\ActiveDestination\\activeDestination.js",["185"],"D:\\Github\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\ResetDetination\\resetDestination.js",["186","187","188","189"],"D:\\Github\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\UserDetail\\userDetail.js",["190","191","192"],"D:\\Github\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\Ranking\\ranking.js",[],{"ruleId":"193","replacedBy":"194"},{"ruleId":"195","replacedBy":"196"},{"ruleId":"197","severity":1,"message":"198","line":58,"column":6,"nodeType":"199","endLine":58,"endColumn":8,"suggestions":"200"},{"ruleId":"201","severity":1,"message":"202","line":24,"column":10,"nodeType":"203","messageId":"204","endLine":24,"endColumn":19},{"ruleId":"197","severity":1,"message":"205","line":127,"column":6,"nodeType":"199","endLine":127,"endColumn":8,"suggestions":"206"},{"ruleId":"197","severity":1,"message":"207","line":145,"column":6,"nodeType":"199","endLine":145,"endColumn":17,"suggestions":"208"},{"ruleId":"209","severity":1,"message":"210","line":247,"column":25,"nodeType":"211","endLine":251,"endColumn":30},{"ruleId":"197","severity":1,"message":"212","line":29,"column":6,"nodeType":"199","endLine":29,"endColumn":14,"suggestions":"213"},{"ruleId":"197","severity":1,"message":"214","line":72,"column":6,"nodeType":"199","endLine":72,"endColumn":8,"suggestions":"215"},{"ruleId":"197","severity":1,"message":"216","line":88,"column":6,"nodeType":"199","endLine":88,"endColumn":8,"suggestions":"217"},{"ruleId":"197","severity":1,"message":"218","line":110,"column":6,"nodeType":"199","endLine":110,"endColumn":8,"suggestions":"219"},{"ruleId":"201","severity":1,"message":"220","line":2,"column":10,"nodeType":"203","messageId":"204","endLine":2,"endColumn":16},{"ruleId":"197","severity":1,"message":"221","line":104,"column":6,"nodeType":"199","endLine":104,"endColumn":14,"suggestions":"222"},{"ruleId":"197","severity":1,"message":"223","line":115,"column":6,"nodeType":"199","endLine":115,"endColumn":8,"suggestions":"224"},{"ruleId":"197","severity":1,"message":"225","line":123,"column":6,"nodeType":"199","endLine":123,"endColumn":8,"suggestions":"226"},{"ruleId":"197","severity":1,"message":"227","line":138,"column":6,"nodeType":"199","endLine":138,"endColumn":12,"suggestions":"228"},{"ruleId":"197","severity":1,"message":"229","line":149,"column":6,"nodeType":"199","endLine":149,"endColumn":48,"suggestions":"230"},{"ruleId":"197","severity":1,"message":"231","line":162,"column":6,"nodeType":"199","endLine":162,"endColumn":22,"suggestions":"232"},{"ruleId":"197","severity":1,"message":"212","line":178,"column":6,"nodeType":"199","endLine":178,"endColumn":36,"suggestions":"233"},{"ruleId":"197","severity":1,"message":"212","line":186,"column":6,"nodeType":"199","endLine":186,"endColumn":14,"suggestions":"234"},{"ruleId":"197","severity":1,"message":"212","line":256,"column":6,"nodeType":"199","endLine":256,"endColumn":22,"suggestions":"235"},{"ruleId":"197","severity":1,"message":"236","line":270,"column":6,"nodeType":"199","endLine":270,"endColumn":44,"suggestions":"237"},{"ruleId":"197","severity":1,"message":"212","line":278,"column":6,"nodeType":"199","endLine":278,"endColumn":22,"suggestions":"238"},{"ruleId":"197","severity":1,"message":"212","line":300,"column":6,"nodeType":"199","endLine":300,"endColumn":22,"suggestions":"239"},{"ruleId":"197","severity":1,"message":"212","line":330,"column":6,"nodeType":"199","endLine":330,"endColumn":22,"suggestions":"240"},{"ruleId":"197","severity":1,"message":"241","line":365,"column":6,"nodeType":"199","endLine":365,"endColumn":14,"suggestions":"242"},{"ruleId":"197","severity":1,"message":"212","line":383,"column":6,"nodeType":"199","endLine":383,"endColumn":14,"suggestions":"243"},{"ruleId":"197","severity":1,"message":"241","line":527,"column":6,"nodeType":"199","endLine":527,"endColumn":28,"suggestions":"244"},{"ruleId":"197","severity":1,"message":"241","line":537,"column":6,"nodeType":"199","endLine":537,"endColumn":28,"suggestions":"245"},{"ruleId":"197","severity":1,"message":"241","line":563,"column":6,"nodeType":"199","endLine":563,"endColumn":14,"suggestions":"246"},{"ruleId":"201","severity":1,"message":"247","line":582,"column":9,"nodeType":"203","messageId":"204","endLine":582,"endColumn":25},{"ruleId":"201","severity":1,"message":"248","line":602,"column":9,"nodeType":"203","messageId":"204","endLine":602,"endColumn":39},{"ruleId":"201","severity":1,"message":"249","line":35,"column":10,"nodeType":"203","messageId":"204","endLine":35,"endColumn":16},{"ruleId":"201","severity":1,"message":"250","line":35,"column":18,"nodeType":"203","messageId":"204","endLine":35,"endColumn":27},{"ruleId":"197","severity":1,"message":"223","line":48,"column":6,"nodeType":"199","endLine":48,"endColumn":8,"suggestions":"251"},{"ruleId":"197","severity":1,"message":"252","line":88,"column":6,"nodeType":"199","endLine":88,"endColumn":67,"suggestions":"253"},{"ruleId":"209","severity":1,"message":"210","line":150,"column":15,"nodeType":"211","endLine":152,"endColumn":17},{"ruleId":"209","severity":1,"message":"210","line":158,"column":15,"nodeType":"211","endLine":160,"endColumn":17},{"ruleId":"197","severity":1,"message":"254","line":112,"column":6,"nodeType":"199","endLine":112,"endColumn":36,"suggestions":"255"},{"ruleId":"201","severity":1,"message":"256","line":49,"column":16,"nodeType":"203","messageId":"204","endLine":49,"endColumn":24},{"ruleId":"197","severity":1,"message":"207","line":74,"column":5,"nodeType":"199","endLine":74,"endColumn":18,"suggestions":"257"},{"ruleId":"197","severity":1,"message":"254","line":120,"column":6,"nodeType":"199","endLine":120,"endColumn":36,"suggestions":"258"},{"ruleId":"201","severity":1,"message":"259","line":1,"column":27,"nodeType":"203","messageId":"204","endLine":1,"endColumn":36},{"ruleId":"260","severity":1,"message":"261","line":56,"column":70,"nodeType":"262","messageId":"263","endLine":56,"endColumn":72},{"ruleId":"260","severity":1,"message":"261","line":59,"column":70,"nodeType":"262","messageId":"263","endLine":59,"endColumn":72},{"ruleId":"260","severity":1,"message":"261","line":70,"column":70,"nodeType":"262","messageId":"263","endLine":70,"endColumn":72},{"ruleId":"260","severity":1,"message":"261","line":73,"column":70,"nodeType":"262","messageId":"263","endLine":73,"endColumn":72},{"ruleId":"201","severity":1,"message":"264","line":17,"column":9,"nodeType":"203","messageId":"204","endLine":17,"endColumn":15},{"ruleId":"201","severity":1,"message":"265","line":1,"column":17,"nodeType":"203","messageId":"204","endLine":1,"endColumn":25},{"ruleId":"201","severity":1,"message":"266","line":4,"column":7,"nodeType":"203","messageId":"204","endLine":4,"endColumn":14},{"ruleId":"197","severity":1,"message":"267","line":19,"column":6,"nodeType":"199","endLine":19,"endColumn":15,"suggestions":"268"},{"ruleId":"197","severity":1,"message":"269","line":46,"column":5,"nodeType":"199","endLine":46,"endColumn":9,"suggestions":"270"},{"ruleId":"201","severity":1,"message":"271","line":9,"column":8,"nodeType":"203","messageId":"204","endLine":9,"endColumn":11},{"ruleId":"201","severity":1,"message":"272","line":13,"column":26,"nodeType":"203","messageId":"204","endLine":13,"endColumn":45},{"ruleId":"201","severity":1,"message":"202","line":19,"column":10,"nodeType":"203","messageId":"204","endLine":19,"endColumn":19},{"ruleId":"197","severity":1,"message":"273","line":82,"column":6,"nodeType":"199","endLine":82,"endColumn":8,"suggestions":"274"},{"ruleId":"197","severity":1,"message":"205","line":115,"column":5,"nodeType":"199","endLine":115,"endColumn":7,"suggestions":"275"},{"ruleId":"197","severity":1,"message":"207","line":133,"column":5,"nodeType":"199","endLine":133,"endColumn":11,"suggestions":"276"},{"ruleId":"209","severity":1,"message":"210","line":149,"column":13,"nodeType":"211","endLine":153,"endColumn":18},"no-native-reassign",["277"],"no-negated-in-lhs",["278"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history', 'setIsLoggedIn', 'socket', and 'userID'. Either include them or remove the dependency array. If 'setIsLoggedIn' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["279"],"no-unused-vars","'Copyright' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'history', 'token', and 'userID'. Either include them or remove the dependency array.",["280"],"React Hook useEffect has missing dependencies: 'token' and 'userID'. Either include them or remove the dependency array.",["281"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array.",["282"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["283"],"React Hook useEffect has a missing dependency: 'jwtToken'. Either include it or remove the dependency array.",["284"],"React Hook useEffect has missing dependencies: 'history', 'socket', and 'userID'. Either include them or remove the dependency array.",["285"],"'Prompt' is defined but never used.","React Hook useEffect has missing dependencies: 'name', 'socket', and 'userID'. Either include them or remove the dependency array.",["286"],"React Hook useEffect has a missing dependency: 'History'. Either include it or remove the dependency array.",["287"],"React Hook useEffect has missing dependencies: 'game', 'gameID', and 'getGame'. Either include them or remove the dependency array.",["288"],"React Hook useEffect has missing dependencies: 'getPlayer' and 'userID'. Either include them or remove the dependency array.",["289"],"React Hook useEffect has missing dependencies: 'game.Player1ID', 'gameID', 'player1.Elo', 'player2.Elo', and 'socket'. Either include them or remove the dependency array.",["290"],"React Hook useEffect has missing dependencies: 'game' and 'socket'. Either include them or remove the dependency array.",["291"],["292"],["293"],["294"],"React Hook useEffect has missing dependencies: 'player1Ready', 'player2Ready', and 'socket'. Either include them or remove the dependency array.",["295"],["296"],["297"],["298"],"React Hook useEffect has missing dependencies: 'socket' and 'userID'. Either include them or remove the dependency array.",["299"],["300"],["301"],["302"],["303"],"'handleEndConcert' is assigned a value but never used.","'handleURLChangeWhenPlayingGame' is assigned a value but never used.","'player' is assigned a value but never used.","'setPlayer' is assigned a value but never used.",["304"],"React Hook useEffect has missing dependencies: 'gameID' and 'token'. Either include them or remove the dependency array.",["305"],"React Hook useEffect has a missing dependency: 'onlineUserListCopy'. Either include it or remove the dependency array. You can also do a functional update 'setOnlineUserListCopy(o => ...)' if you only need 'onlineUserListCopy' in the 'setOnlineUserListCopy' call.",["306"],"'setDense' is assigned a value but never used.",["307"],["308"],"'useEffect' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'userID' is assigned a value but never used.","'useState' is defined but never used.","'API_URL' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setCounter'. Either include it or remove the dependency array. If 'setCounter' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["309"],"React Hook useEffect has missing dependencies: 'history', 'isLoggedIn', 'setIsLoggedIn', and 'socket'. Either include them or remove the dependency array. If 'setIsLoggedIn' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["310"],"'Box' is defined but never used.","'InformationSnackbar' is defined but never used.","React Hook useEffect has missing dependencies: 'history', 'isLoggedIn', and 'reqID'. Either include them or remove the dependency array.",["311"],["312"],["313"],"no-global-assign","no-unsafe-negation",{"desc":"314","fix":"315"},{"desc":"316","fix":"317"},{"desc":"318","fix":"319"},{"desc":"320","fix":"321"},{"desc":"322","fix":"323"},{"desc":"324","fix":"325"},{"desc":"326","fix":"327"},{"desc":"328","fix":"329"},{"desc":"330","fix":"331"},{"desc":"332","fix":"333"},{"desc":"334","fix":"335"},{"desc":"336","fix":"337"},{"desc":"338","fix":"339"},{"desc":"340","fix":"341"},{"desc":"342","fix":"343"},{"desc":"344","fix":"345"},{"desc":"346","fix":"347"},{"desc":"344","fix":"348"},{"desc":"349","fix":"350"},{"desc":"344","fix":"351"},{"desc":"344","fix":"352"},{"desc":"342","fix":"353"},{"desc":"354","fix":"355"},{"desc":"354","fix":"356"},{"desc":"344","fix":"357"},{"desc":"330","fix":"358"},{"desc":"359","fix":"360"},{"desc":"361","fix":"362"},{"desc":"363","fix":"364"},{"desc":"361","fix":"365"},{"desc":"366","fix":"367"},{"desc":"368","fix":"369"},{"desc":"370","fix":"371"},{"desc":"316","fix":"372"},{"desc":"373","fix":"374"},"Update the dependencies array to be: [history, setIsLoggedIn, socket, userID]",{"range":"375","text":"376"},"Update the dependencies array to be: [history, token, userID]",{"range":"377","text":"378"},"Update the dependencies array to be: [setAvatar, token, userID]",{"range":"379","text":"380"},"Update the dependencies array to be: [socket, userID]",{"range":"381","text":"382"},"Update the dependencies array to be: [history]",{"range":"383","text":"384"},"Update the dependencies array to be: [jwtToken]",{"range":"385","text":"386"},"Update the dependencies array to be: [history, socket, userID]",{"range":"387","text":"388"},"Update the dependencies array to be: [gameID, name, socket, userID]",{"range":"389","text":"390"},"Update the dependencies array to be: [History]",{"range":"391","text":"392"},"Update the dependencies array to be: [game, gameID, getGame]",{"range":"393","text":"394"},"Update the dependencies array to be: [game, getPlayer, userID]",{"range":"395","text":"396"},"Update the dependencies array to be: [player1Ready, player2Ready, isMainPlayer, socket, gameID, game.Player1ID, player1.Elo, player2.Elo]",{"range":"397","text":"398"},"Update the dependencies array to be: [game, gameID, socket, userID]",{"range":"399","text":"400"},"Update the dependencies array to be: [gameID, userID, isMainPlayer, socket]",{"range":"401","text":"402"},"Update the dependencies array to be: [gameID, socket]",{"range":"403","text":"404"},"Update the dependencies array to be: [gameID, socket, userID]",{"range":"405","text":"406"},"Update the dependencies array to be: [gameID, userID, chatHistory, history, socket, player1Ready, player2Ready]",{"range":"407","text":"408"},{"range":"409","text":"406"},"Update the dependencies array to be: [userID, gameID, socket]",{"range":"410","text":"411"},{"range":"412","text":"406"},{"range":"413","text":"406"},{"range":"414","text":"404"},"Update the dependencies array to be: [gameID, player2.Name, socket, userID]",{"range":"415","text":"416"},{"range":"417","text":"416"},{"range":"418","text":"406"},{"range":"419","text":"392"},"Update the dependencies array to be: [setGame, setHistory, setChatHistory, setAvatar1, setAvatar2, token, gameID]",{"range":"420","text":"421"},"Update the dependencies array to be: [searchString, onlineUserList, onlineUserListCopy]",{"range":"422","text":"423"},"Update the dependencies array to be: [setGameList, token, userID]",{"range":"424","text":"425"},{"range":"426","text":"423"},"Update the dependencies array to be: [counter, setCounter]",{"range":"427","text":"428"},"Update the dependencies array to be: [ID, history, isLoggedIn, setIsLoggedIn, socket]",{"range":"429","text":"430"},"Update the dependencies array to be: [history, isLoggedIn, reqID]",{"range":"431","text":"432"},{"range":"433","text":"378"},"Update the dependencies array to be: [info, token, userID]",{"range":"434","text":"435"},[1681,1683],"[history, setIsLoggedIn, socket, userID]",[4278,4280],"[history, token, userID]",[4734,4745],"[setAvatar, token, userID]",[1135,1143],"[socket, userID]",[2455,2457],"[history]",[2867,2869],"[jwtToken]",[3418,3420],"[history, socket, userID]",[4152,4160],"[gameID, name, socket, userID]",[4389,4391],"[History]",[4566,4568],"[game, gameID, getGame]",[5013,5019],"[game, getPlayer, userID]",[5348,5390],"[player1Ready, player2Ready, isMainPlayer, socket, gameID, game.Player1ID, player1.Elo, player2.Elo]",[5724,5740],"[game, gameID, socket, userID]",[6180,6210],"[gameID, userID, isMainPlayer, socket]",[6418,6426],"[gameID, socket]",[8997,9013],"[gameID, socket, userID]",[9385,9423],"[gameID, userID, chatHistory, history, socket, player1Ready, player2Ready]",[9638,9654],[10273,10289],"[userID, gameID, socket]",[11158,11174],[12270,12278],[12678,12686],[16449,16471],"[gameID, player2.Name, socket, userID]",[16751,16773],[17466,17474],[1804,1806],[3080,3141],"[setGame, setHistory, setChatHistory, setAvatar1, setAvatar2, token, gameID]",[2935,2965],"[searchString, onlineUserList, onlineUserListCopy]",[2291,2304],"[setGameList, token, userID]",[3628,3658],[465,474],"[counter, setCounter]",[1361,1365],"[ID, history, isLoggedIn, setIsLoggedIn, socket]",[2464,2466],"[history, isLoggedIn, reqID]",[3359,3361],[3765,3771],"[info, token, userID]"]