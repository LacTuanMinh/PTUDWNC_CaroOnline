[{"D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\index.js":"1","D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\reportWebVitals.js":"2","D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\App.js":"3","D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\Game\\game.js":"4","D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\SignUp\\signup.js":"5","D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\Profile\\profile.js":"6","D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\Navbar\\navbar.js":"7","D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\Footer\\footer.js":"8","D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\Home\\home.js":"9","D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\GameList\\games.js":"10","D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\SignIn\\signin.js":"11","D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\Game\\board.js":"12","D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\Game\\gameServices.js":"13","D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\GameList\\gamelist.js":"14","D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\utils\\helper.js":"15","D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\OnlineUsers\\onlineUsers_Primary.js":"16","D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\OnlineUsers\\onlineUsers_Secondary.js":"17","D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\Player\\player.js":"18","D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\Dialogs\\ImageUploadDialog\\index.js":"19","D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\Dialogs\\ChangePasswordDialog\\index.js":"20","D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\Game\\square.js":"21","D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\GameList\\gameitem.js":"22"},{"size":470,"mtime":1607790610761,"results":"23","hashOfConfig":"24"},{"size":375,"mtime":1607790610762,"results":"25","hashOfConfig":"24"},{"size":2144,"mtime":1607840584312,"results":"26","hashOfConfig":"24"},{"size":10869,"mtime":1607866409754,"results":"27","hashOfConfig":"24"},{"size":5236,"mtime":1607791305397,"results":"28","hashOfConfig":"24"},{"size":8764,"mtime":1607791826780,"results":"29","hashOfConfig":"24"},{"size":3862,"mtime":1607791297488,"results":"30","hashOfConfig":"24"},{"size":1209,"mtime":1607790610753,"results":"31","hashOfConfig":"24"},{"size":308,"mtime":1607793202988,"results":"32","hashOfConfig":"24"},{"size":6000,"mtime":1607843801577,"results":"33","hashOfConfig":"24"},{"size":4394,"mtime":1607791301363,"results":"34","hashOfConfig":"24"},{"size":889,"mtime":1607790610753,"results":"35","hashOfConfig":"24"},{"size":7448,"mtime":1607848718914,"results":"36","hashOfConfig":"24"},{"size":345,"mtime":1607791025112,"results":"37","hashOfConfig":"24"},{"size":503,"mtime":1607791310302,"results":"38","hashOfConfig":"24"},{"size":4491,"mtime":1607793168453,"results":"39","hashOfConfig":"24"},{"size":5359,"mtime":1607793173147,"results":"40","hashOfConfig":"24"},{"size":147,"mtime":1607791211609,"results":"41","hashOfConfig":"24"},{"size":1809,"mtime":1607790610753,"results":"42","hashOfConfig":"24"},{"size":4977,"mtime":1607790610752,"results":"43","hashOfConfig":"24"},{"size":322,"mtime":1607790610754,"results":"44","hashOfConfig":"24"},{"size":4027,"mtime":1607791016669,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"6ilod4",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\index.js",[],["94","95"],"D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\reportWebVitals.js",[],"D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\App.js",[],"D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\Game\\game.js",["96","97","98","99","100","101","102"],"D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\SignUp\\signup.js",[],"D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\Profile\\profile.js",[],"D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\Navbar\\navbar.js",[],"D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\Footer\\footer.js",[],"D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\Home\\home.js",[],"D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\GameList\\games.js",["103"],"import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { authen } from '../../utils/helper'\r\nimport GameList from './gamelist';\r\nimport config from '../../constants/config.json';\r\nconst API_URL = config.API_URL_TEST;\r\nconst jwtToken = window.localStorage.getItem('jwtToken');\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  heroContent: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(4, 0, 2),\r\n  },\r\n  cardGrid: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  card: {\r\n    height: '100%',\r\n    flexDirection: 'column',\r\n  },\r\n  cardMedia: {\r\n    paddingTop: '25%',\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1,\r\n  },\r\n  fab: {\r\n    width: '35%',\r\n    height: '35%',\r\n    fontSize: '50px',\r\n  }\r\n}));\r\n\r\nfunction Games({ socket }) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const userID = localStorage.getItem('userID');\r\n  const [open, setOpen] = useState(false);\r\n  const [games, setGames] = useState([]);\r\n  const [name, setName] = useState(\"\");\r\n  const [password, setPassword] = useState(null);\r\n  const [isBlockedRule, setIsBlockedRule] = useState(false);\r\n\r\n  useEffect(() => {\r\n    async function Authen() {\r\n      const status = await authen();\r\n      if (status === 401) {\r\n        history.push('/signin')\r\n      }\r\n    }\r\n    Authen();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    async function getAllGames() {\r\n      const res = await fetch(`${API_URL}/games/`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${jwtToken}`\r\n        }\r\n      });\r\n      const result = await res.json();\r\n      console.log(result);\r\n      setGames(result.games);\r\n    }\r\n    getAllGames();\r\n  }, []);\r\n\r\n  const addGameButtonClicked = () => {\r\n    setOpen(true);\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  }\r\n\r\n  const handleCreate = async () => {\r\n    const data = {\r\n      name: name,\r\n      password: password,\r\n      isBlockedRule: isBlockedRule,\r\n      userID: userID\r\n    }\r\n    console.log(data);\r\n    const res = await fetch(`${API_URL}/games/add`, {\r\n      method: 'POST',\r\n      body: JSON.stringify(data),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${jwtToken}`\r\n      }\r\n    });\r\n    const result = await res.json();\r\n    if (res.status === 200) {\r\n      console.log(result.msg);\r\n      history.push('/games/' + result.game.ID);\r\n    } else {\r\n      window.alert(result.msg);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <main>\r\n        {/* Hero unit */}\r\n        <div className={classes.heroContent}>\r\n          <Container maxWidth=\"sm\">\r\n            <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\r\n              Games layout\r\n            </Typography>\r\n          </Container>\r\n        </div>\r\n        <Container className={classes.cardGrid} maxWidth=\"md\">\r\n          {/* End hero unit */}\r\n          <Grid container spacing={4}>\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <Card className={classes.card}>\r\n                <CardMedia className={classes.cardMedia}>\r\n                  <Fab className={classes.fab} color=\"primary\" aria-label=\"Add\"\r\n                    onClick={addGameButtonClicked}>\r\n                    +\r\n                  </Fab>\r\n                </CardMedia>\r\n                <CardContent className={classes.cardContent}>\r\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                    Create a new game\r\n                  </Typography>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n            <GameList\r\n              games={games}\r\n              socket={socket}\r\n            />\r\n          </Grid>\r\n          <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n            <DialogTitle id=\"form-dialog-title\">Game Information</DialogTitle>\r\n            <DialogContent>\r\n              <DialogContentText>\r\n                Please enter the information for the game\r\n              </DialogContentText>\r\n              <TextField id=\"name\" label=\"Name\" autoFocus margin=\"dense\" required\r\n                fullWidth onChange={e => setName(e.target.value)}\r\n              />\r\n              <TextField id=\"password\" label=\"Password\" margin=\"dense\"\r\n                fullWidth onChange={e => setPassword(e.target.value)}\r\n              />\r\n              <Typography style={{display: \"inline-block\"}}>\r\n                Is Blocked Rule\r\n              </Typography>\r\n              <Checkbox onChange={e => setIsBlockedRule(e.target.checked)} />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={handleClose} color=\"primary\">\r\n                Cancel\r\n              </Button>\r\n              <Button onClick={handleCreate} color=\"primary\">\r\n                Create\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </Container>\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Games;","D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\SignIn\\signin.js",[],"D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\Game\\board.js",[],"D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\Game\\gameServices.js",[],"D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\GameList\\gamelist.js",[],"D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\utils\\helper.js",[],"D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\OnlineUsers\\onlineUsers_Primary.js",[],"D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\OnlineUsers\\onlineUsers_Secondary.js",[],"D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\Player\\player.js",[],"D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\Dialogs\\ImageUploadDialog\\index.js",["104"],"import React, { useState } from 'react'\r\nimport { DropzoneDialog } from 'material-ui-dropzone'\r\nimport Button from '@material-ui/core/Button';\r\nimport AddPhotoAlternateIcon from '@material-ui/icons/AddPhotoAlternate';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    margin: {\r\n        margin: '10px 0 40px',\r\n        alignItems: 'center'\r\n    }\r\n}));\r\n\r\nexport default function ImageUploadDialog() {\r\n    const classes = useStyles();\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [files, setFile] = useState([]);\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }\r\n\r\n    const handleSave = (files) => {\r\n        //Saving files to state for further use and closing Modal.\r\n        // this.setState({\r\n        //     files: files,\r\n        //     open: false\r\n        // });\r\n        console.log(files);\r\n        setFile(files);\r\n        setOpen(false);\r\n    }\r\n\r\n    const handleOpen = () => {\r\n        // this.setState({\r\n        //     open: true,\r\n        // });\r\n        setOpen(true);\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={classes.margin}>\r\n            <Button onClick={handleOpen} variant=\"contained\" color=\"primary\" component=\"span\" >\r\n                <AddPhotoAlternateIcon /> Choose an image\r\n            </Button>\r\n\r\n            <DropzoneDialog\r\n                open={open}\r\n                onSave={handleSave}\r\n                acceptedFiles={['image/jpeg', 'image/png', 'image/bmp']}\r\n                // showPreviews={true}\r\n                showPreviewsInDropzone={true}\r\n                showPreviews={false}\r\n                showFileNames={true}\r\n                filesLimit={1}\r\n                maxFileSize={5000000}\r\n                onClose={handleClose}\r\n            />\r\n        </div>\r\n    );\r\n}","D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\Dialogs\\ChangePasswordDialog\\index.js",["105","106"],"import React, { useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\n// import DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n// import { isBlankString } from '../../../utils/index'; //'../../../utils/index'\r\n\r\nexport default function FormDialog() {\r\n    const [open, setOpen] = useState(false);\r\n    const [currentPassword, setCurrentPassword] = useState(\"\");\r\n    const [newPassword, setNewPassword] = useState(\"\");\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        setCurrentPassword(\"\");\r\n        setNewPassword(\"\");\r\n    };\r\n\r\n    const handleChangePassword = (event) => {\r\n        event.preventDefault();\r\n        // console.log(currentPassword)\r\n        // if (currentPassword === \"\" || newPassword === \"\" || confirmPassword === \"\") {\r\n        //     alert('Please fill out all these fields')\r\n        //     return;\r\n        // } else if (isBlankString(currentPassword) || isBlankString(newPassword) || isBlankString(confirmPassword)) {\r\n        //     alert('Some fields are a blank string')\r\n        //     return;\r\n        // } else if (newPassword !== confirmPassword) {\r\n        //     alert('Confirm password does not match')\r\n        //     return;\r\n        // }\r\n\r\n        // const userID = localStorage.getItem('userID');\r\n        // const token = window.localStorage.getItem('jwtToken')\r\n        // fetch(`https://my-retro-api.herokuapp.com/profile/password/${userID}`, {\r\n        //     method: 'POST',\r\n        //     body: JSON.stringify({ currentPassword, newPassword, confirmPassword }),\r\n        //     headers: {\r\n        //         'Content-Type': 'application/json',\r\n        //         Authorization: `Bearer ${token}`\r\n        //     }\r\n        // }).then(res => {\r\n        //     if (res.status === 200 || res.status === 400) {\r\n        //         res.json().then(result => {\r\n        //             alert(result.mesg);\r\n        //             // console.log(result.token);\r\n        //             // console.log(result.id)\r\n        //             // console.log(result.name)\r\n\r\n        //             // window.localStorage.setItem('jwtToken', result.token);\r\n        //             // window.localStorage.setItem('userID', result.id);\r\n        //             // window.localStorage.setItem('userName', result.name);\r\n        //             // history.push(\"/dashboard\");\r\n        //         });\r\n        //     } else if (res.status === 401) {// authenticate thất bại tự trả 401\r\n        //         alert(\"You have to log in\")\r\n        //     }\r\n        // }).catch(err => {\r\n        //     console.error(err);\r\n        //     alert('Error change password please try again');\r\n        // });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Button fullWidth variant=\"outlined\" color=\"secondary\" onClick={handleClickOpen} startIcon={<SaveIcon />}>\r\n                Change password\r\n            </Button>\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <form >\r\n                    <DialogTitle id=\"form-dialog-title\">Change password</DialogTitle>\r\n                    <DialogContent>\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"currentPassword\"\r\n                            name=\"currentPassword\"\r\n                            label=\"Current password\"\r\n                            type=\"password\"\r\n                            fullWidth\r\n                            onChange={(event) => { setCurrentPassword(event.target.value); }}\r\n                        />\r\n                        <TextField\r\n\r\n                            margin=\"dense\"\r\n                            id=\"newPassword\"\r\n                            name=\"newPassword\"\r\n                            label=\"New password\"\r\n                            type=\"password\"\r\n                            fullWidth\r\n                            onChange={(event) => { setNewPassword(event.target.value); }}\r\n                        />\r\n\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button /*onClick={handleClose}*/ onClick={handleChangePassword} color=\"secondary\">\r\n                            Update\r\n                        </Button>\r\n                        <Button onClick={handleClose} color=\"primary\">\r\n                            Cancel\r\n                        </Button>\r\n\r\n                    </DialogActions>\r\n                </form>\r\n\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n","D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\Game\\square.js",[],"D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\GameList\\gameitem.js",[],{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":52,"column":6,"nodeType":"113","endLine":52,"endColumn":8,"suggestions":"114"},{"ruleId":"111","severity":1,"message":"115","line":70,"column":6,"nodeType":"113","endLine":70,"endColumn":8,"suggestions":"116"},{"ruleId":"111","severity":1,"message":"117","line":88,"column":6,"nodeType":"113","endLine":88,"endColumn":8,"suggestions":"118"},{"ruleId":"111","severity":1,"message":"119","line":100,"column":6,"nodeType":"113","endLine":100,"endColumn":35,"suggestions":"120"},{"ruleId":"111","severity":1,"message":"119","line":109,"column":6,"nodeType":"113","endLine":109,"endColumn":27,"suggestions":"121"},{"ruleId":"111","severity":1,"message":"122","line":125,"column":6,"nodeType":"113","endLine":125,"endColumn":27,"suggestions":"123"},{"ruleId":"111","severity":1,"message":"124","line":211,"column":6,"nodeType":"113","endLine":211,"endColumn":29,"suggestions":"125"},{"ruleId":"111","severity":1,"message":"126","line":69,"column":6,"nodeType":"113","endLine":69,"endColumn":8,"suggestions":"127"},{"ruleId":"128","severity":1,"message":"129","line":18,"column":12,"nodeType":"130","messageId":"131","endLine":18,"endColumn":17},{"ruleId":"128","severity":1,"message":"132","line":14,"column":12,"nodeType":"130","messageId":"131","endLine":14,"endColumn":27},{"ruleId":"128","severity":1,"message":"133","line":15,"column":12,"nodeType":"130","messageId":"131","endLine":15,"endColumn":23},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'History'. Either include it or remove the dependency array.","ArrayExpression",["136"],"React Hook useEffect has missing dependencies: 'user' and 'userID'. Either include them or remove the dependency array.",["137"],"React Hook useEffect has missing dependencies: 'game' and 'gameID'. Either include them or remove the dependency array.",["138"],"React Hook useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array.",["139"],["140"],"React Hook useEffect has missing dependencies: 'socket' and 'userID'. Either include them or remove the dependency array.",["141"],"React Hook useEffect has missing dependencies: 'opponent.Elo' and 'user'. Either include them or remove the dependency array.",["142"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["143"],"no-unused-vars","'files' is assigned a value but never used.","Identifier","unusedVar","'currentPassword' is assigned a value but never used.","'newPassword' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},"Update the dependencies array to be: [History]",{"range":"160","text":"161"},"Update the dependencies array to be: [user, userID]",{"range":"162","text":"163"},"Update the dependencies array to be: [game, gameID]",{"range":"164","text":"165"},"Update the dependencies array to be: [xIsNext, isYourTurn, gameID, socket]",{"range":"166","text":"167"},"Update the dependencies array to be: [gameID, chatHistory, socket]",{"range":"168","text":"169"},"Update the dependencies array to be: [chatHistory, gameID, socket, userID]",{"range":"170","text":"171"},"Update the dependencies array to be: [hasWinner, isYourTurn, opponent.Elo, user]",{"range":"172","text":"173"},"Update the dependencies array to be: [history]",{"range":"174","text":"175"},[2022,2024],"[History]",[2469,2471],"[user, userID]",[2922,2924],"[game, gameID]",[3256,3285],"[xIsNext, isYourTurn, gameID, socket]",[3520,3541],"[gameID, chatHistory, socket]",[4075,4096],"[chatHistory, gameID, socket, userID]",[6261,6284],"[hasWinner, isYourTurn, opponent.Elo, user]",[2265,2267],"[history]"]