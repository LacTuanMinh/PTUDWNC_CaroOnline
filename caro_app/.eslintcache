[{"D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\index.js":"1","D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\reportWebVitals.js":"2","D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\App.js":"3","D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\SignUp\\signup.js":"4","D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\SignIn\\signin.js":"5","D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\Footer\\footer.js":"6","D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\Profile\\profile.js":"7","D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\Game\\game.js":"8","D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\GameList\\games.js":"9","D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\Navbar\\navbar.js":"10","D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\Home\\home.js":"11","D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\utils\\helper.js":"12","D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\Game\\board.js":"13","D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\Game\\gameServices.js":"14","D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\OnlineUsers\\onlineUsers_Primary.js":"15","D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\Player\\player.js":"16","D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\Timer\\timer.js":"17","D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\OnlineUsers\\onlineUsers_Secondary.js":"18","D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\Dialogs\\ChangePasswordDialog\\index.js":"19","D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\Dialogs\\ImageUploadDialog\\index.js":"20","D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\Game\\square.js":"21","D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\GameList\\gamelist.js":"22","D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\GameList\\gameitem.js":"23"},{"size":470,"mtime":1607790610761,"results":"24","hashOfConfig":"25"},{"size":375,"mtime":1607790610762,"results":"26","hashOfConfig":"25"},{"size":2144,"mtime":1607840584312,"results":"27","hashOfConfig":"25"},{"size":5715,"mtime":1607943438723,"results":"28","hashOfConfig":"25"},{"size":4579,"mtime":1607943438722,"results":"29","hashOfConfig":"25"},{"size":1209,"mtime":1607790610753,"results":"30","hashOfConfig":"25"},{"size":8801,"mtime":1608055810996,"results":"31","hashOfConfig":"25"},{"size":22666,"mtime":1609090968575,"results":"32","hashOfConfig":"25"},{"size":7125,"mtime":1608445379768,"results":"33","hashOfConfig":"25"},{"size":3976,"mtime":1608445379825,"results":"34","hashOfConfig":"25"},{"size":3965,"mtime":1608445379794,"results":"35","hashOfConfig":"25"},{"size":801,"mtime":1607943438731,"results":"36","hashOfConfig":"25"},{"size":889,"mtime":1607790610753,"results":"37","hashOfConfig":"25"},{"size":7448,"mtime":1607848718914,"results":"38","hashOfConfig":"25"},{"size":4710,"mtime":1608054368340,"results":"39","hashOfConfig":"25"},{"size":616,"mtime":1608091265694,"results":"40","hashOfConfig":"25"},{"size":1485,"mtime":1609088387506,"results":"41","hashOfConfig":"25"},{"size":5487,"mtime":1608445379842,"results":"42","hashOfConfig":"25"},{"size":4977,"mtime":1607790610752,"results":"43","hashOfConfig":"25"},{"size":1809,"mtime":1607790610753,"results":"44","hashOfConfig":"25"},{"size":322,"mtime":1607790610754,"results":"45","hashOfConfig":"25"},{"size":345,"mtime":1607791025112,"results":"46","hashOfConfig":"25"},{"size":4016,"mtime":1608445379737,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"6ilod4",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\index.js",[],["102","103"],"D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\reportWebVitals.js",[],"D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\App.js",[],"D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\SignUp\\signup.js",[],"D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\SignIn\\signin.js",[],"D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\Footer\\footer.js",[],"D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\Profile\\profile.js",["104","105","106"],"import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport ContactMailRoundedIcon from '@material-ui/icons/ContactMailRounded';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport ChangePasswordDialog from '../Dialogs/ChangePasswordDialog';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport ImageUploadDialog from '../Dialogs/ImageUploadDialog';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport defaultAvatar from '../../images/defaultAvatar.jpg';\r\nimport { authen } from '../../utils/helper';\r\nimport config from '../../constants/config.json';\r\nconst API_URL = config.API_URL_TEST;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  cardGrid: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  card: {\r\n    height: '100%',\r\n    flexDirection: 'column',\r\n  },\r\n  cardMedia: {\r\n    paddingTop: '25%',\r\n  },\r\n  cardHeader: {\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[700],\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(3),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: \"black\"//theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '75%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  container: {\r\n    display: 'inline-block',\r\n    width: '100%'\r\n  },\r\n  floatRight: {\r\n    float: \"right\",\r\n    width: '60%'\r\n  },\r\n  floatLeft: {\r\n    float: \"left\",\r\n    width: '40%'\r\n  },\r\n  paperLikeShadow: {\r\n    boxShadow: '0 4px 8px 5px rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\r\n  }\r\n}));\r\n\r\nexport default function Profile() {\r\n  const classes = useStyles();\r\n  const [userName, setUserName] = useState(\"Minh Lạc\");\r\n  const [email, setEmail] = useState(\"minh@gmail.com\");\r\n  const [dateOfBirth, setDateOfBirth] = useState(\"16/09/1999\");\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    async function ComponentWillMount() {\r\n      const token = window.localStorage.getItem('jwtToken');\r\n      const userID = localStorage.getItem('userID');\r\n      const res = await fetch(`${API_URL}/users/profile/${userID}`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      });\r\n\r\n      // const result = await res.json();\r\n\r\n    }\r\n    ComponentWillMount();\r\n  }, []);\r\n\r\n\r\n  const handleUserNameChange = async (event) => {\r\n    event.preventDefault();\r\n    // if (isBlankString(newUserName)) {\r\n    //   alert('User name is a blank string')\r\n    //   return;\r\n    // } else if (newUserName === userName) {\r\n    //   alert('User name hasn\\'t been changed')\r\n    //   return;\r\n    // }\r\n    // const userID = localStorage.getItem('userID');\r\n\r\n    //   .then(res => {\r\n    //     if (res.status === 200) {\r\n    //       res.json().then(result => {\r\n\r\n    //         alert(result.mesg);\r\n    //         setUserName(result.userName);\r\n    //         window.localStorage.setItem('userName', result.userName);\r\n\r\n    //       });\r\n    //     } else if (res.status === 400) {// error : wrong id\r\n    //       res.json().then(result => {\r\n    //         alert(result.mesg);\r\n    //       });\r\n    //     } else if (res.status === 401) {\r\n    //       alert(\"You have to log in\")\r\n    //       history.push('/signin')\r\n    //     }\r\n    //   }).catch(err => {\r\n    //     console.error(err);\r\n    //     alert('Error logging in please try again');\r\n    //   });\r\n  };\r\n  return (\r\n    <>\r\n      <Container component=\"main\" maxWidth=\"lg\">\r\n        <div className={classes.container}>\r\n\r\n          <div className={classes.floatLeft}>\r\n            <div className={classes.paper} style={{ padding: '20px' }}>\r\n              <img height={200} width={200} style={{ borderRadius: '8px' }}\r\n                src={defaultAvatar} alt=\"User avatar\"\r\n              />\r\n              <ImageUploadDialog />\r\n              <Card className={classes.paperLikeShadow} style={{ width: '80%' }}>\r\n                <CardHeader\r\n                  title={\r\n                    <Badge color=\"secondary\">\r\n                      Achivement\r\n                    </Badge>}\r\n                  // action={\r\n                  //   <div>\r\n                  //     <CreateTagDialog\r\n                  //       // colTypeID={columnType[0].colTypeID}// wentWell id is 1\r\n                  //       colTypeID={columnType === undefined || columnType[0] === undefined ? 0 : columnType[0].colTypeID}\r\n                  //       setTags={(tags) => setTags(tags)}\r\n                  //       boardID={boardID}\r\n                  //       tags={tags}\r\n                  //       socket={socket}\r\n                  //     />\r\n                  //   </div>}\r\n                  className={classes.cardHeader}\r\n                />\r\n                <CardContent>\r\n                  {/* <Typography> */}\r\n                  <table style={{ margin: '10px', width: '100%' }}>\r\n                    <tbody>\r\n                      <tr>\r\n                        <td style={{ textAlign: 'right', fontWeight: 'bold', width: '50%' }}>Username:</td>\r\n                        <td style={{ textAlign: 'center', width: '50%' }}>ltminh</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td style={{ textAlign: 'right', fontWeight: 'bold' }}>Elo mark:</td>\r\n                        <td style={{ textAlign: 'center' }}>1200</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td style={{ textAlign: 'right', fontWeight: 'bold' }}>Total play(s):</td>\r\n                        <td style={{ textAlign: 'center' }}>20</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td style={{ textAlign: 'right', fontWeight: 'bold' }}>Winned play(s):</td>\r\n                        <td style={{ textAlign: 'center' }}>20</td>\r\n                      </tr>\r\n                    </tbody>\r\n\r\n                  </table>\r\n\r\n                  {/* </Typography> */}\r\n                </CardContent>\r\n              </Card>\r\n            </div>\r\n          </div>\r\n\r\n          <div className={classes.floatRight}>\r\n            <div className={classes.paper}>\r\n              <Avatar className={classes.avatar}>\r\n                <ContactMailRoundedIcon />\r\n              </Avatar>\r\n              <Typography component=\"h1\" variant=\"h5\">\r\n                YOUR PROFILE\r\n              </Typography>\r\n              <form className={classes.form} onSubmit={handleUserNameChange}>\r\n                <Typography align=\"left\" component=\"h2\"><b> Name:</b> </Typography>\r\n                <TextField variant=\"outlined\" margin=\"normal\" required fullWidth autoFocus\r\n                  id=\"userName\" name=\"userName\" placeholder=\"Username\" defaultValue={userName}\r\n                  onChange={(event) => { setUserName(event.target.value); }}\r\n                />\r\n                <Typography align=\"left\" component=\"h2\">\r\n                  <b>Email:</b>\r\n                </Typography>\r\n                <TextField variant=\"outlined\" margin=\"normal\" required fullWidth\r\n                  id=\"email\" name=\"email\" placeholder=\"Email\" defaultValue={email}\r\n                  onChange={(event) => { setEmail(event.target.value); }}\r\n                />\r\n                <Typography align=\"left\" component=\"h2\">\r\n                  <b>Date of Birth:</b>\r\n                </Typography>\r\n                <TextField variant=\"outlined\" margin=\"normal\" required fullWidth\r\n                  id=\"dob\" name=\"dob\" placeholder=\"Date Of Birth\" defaultValue={dateOfBirth}\r\n                  onChange={(event) => { setDateOfBirth(event.target.value); }}\r\n                />\r\n                <Button type=\"submit\" fullWidth variant=\"outlined\" color=\"primary\"\r\n                  className={classes.submit} startIcon={<SaveIcon />}\r\n                >\r\n                  Save Change\r\n                </Button>\r\n                <Typography align=\"left\" component=\"h2\" style={{ marginTop: 10, marginBottom: 12, fontWeight: 'bold' }}> Passowrd: </Typography>\r\n                <ChangePasswordDialog />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\Game\\game.js",["107","108","109","110","111","112","113","114","115"],"D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\GameList\\games.js",["116","117","118"],"import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { authen, isBlankString } from '../../utils/helper'\r\nimport GameList from './gamelist';\r\nimport config from '../../constants/config.json';\r\nconst API_URL = config.API_URL_TEST;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  heroContent: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(4, 0, 2),\r\n  },\r\n  cardGrid: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  card: {\r\n    height: '100%',\r\n    flexDirection: 'column',\r\n  },\r\n  cardMedia: {\r\n    paddingTop: '25%',\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1,\r\n  },\r\n  fab: {\r\n    width: '35%',\r\n    height: '35%',\r\n    fontSize: '50px',\r\n  }\r\n}));\r\n\r\nfunction Games({ socket }) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const userID = localStorage.getItem('userID');\r\n  const jwtToken = window.localStorage.getItem('jwtToken');\r\n  const [open, setOpen] = useState(false);\r\n  const [games, setGames] = useState([]);\r\n  const [name, setName] = useState(\"\");\r\n  const [password, setPassword] = useState(null);\r\n  const [isBlockedRule, setIsBlockedRule] = useState(false);\r\n  const [timeThinkingEachTurn, setTimeThinkingEachTurn] = useState(60);\r\n\r\n  useEffect(() => {\r\n    async function Authen() {\r\n      const status = await authen();\r\n      if (status === 401) {\r\n        history.push('/signin')\r\n      }\r\n    }\r\n    Authen();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    async function getAllGames() {\r\n      const res = await fetch(`${API_URL}/games`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${jwtToken}`\r\n        }\r\n      });\r\n      const result = await res.json();\r\n      // console.log(result);\r\n      setGames(result.games);\r\n    }\r\n    getAllGames();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n\r\n    socket.on(`newGameFail${userID}`, (data) => {\r\n      alert(data.msg);// game name is empty\r\n    });\r\n\r\n    socket.on(\"server_NewGame\", data => {\r\n      setGames(games => {\r\n        const gamesCopy = games.slice();\r\n        return [data.game].concat(gamesCopy);\r\n        // games.slice().concat([data.game])});\r\n\r\n      });\r\n      if (data.game.Player1ID === userID) {\r\n        history.push(`/games/${data.game.ID}`);\r\n      }\r\n    })\r\n  }, []);\r\n\r\n  const addGameButtonClicked = () => {\r\n    setOpen(true);\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  }\r\n\r\n  const handleCreate = async () => {\r\n    const data = {\r\n      name,\r\n      password,\r\n      isBlockedRule,\r\n      timeThinkingEachTurn,\r\n      userID\r\n    }\r\n    // console.log(data);\r\n    if (isBlankString(data.name)) {\r\n      alert('Game name can not be empty');\r\n      return;\r\n    }\r\n    socket.emit('client_NewGame', data);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <main>\r\n        {/* Hero unit */}\r\n        <div className={classes.heroContent}>\r\n          <Container maxWidth=\"sm\">\r\n            <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\r\n              Games layout\r\n            </Typography>\r\n          </Container>\r\n        </div>\r\n        <Container className={classes.cardGrid} maxWidth=\"lg\">\r\n          {/* End hero unit */}\r\n          <Grid container spacing={4}>\r\n            <Grid item xs={12} sm={6} md={3}>\r\n              <Card className={classes.card}>\r\n                <CardMedia className={classes.cardMedia}>\r\n                  <Fab className={classes.fab} color=\"primary\" aria-label=\"Add\"\r\n                    onClick={addGameButtonClicked}>\r\n                    +\r\n                  </Fab>\r\n                </CardMedia>\r\n                <CardContent className={classes.cardContent}>\r\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                    Create a new game\r\n                  </Typography>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n            <GameList\r\n              games={games}\r\n              socket={socket}\r\n            />\r\n          </Grid>\r\n          <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n            <DialogTitle id=\"form-dialog-title\">Game Information</DialogTitle>\r\n            <DialogContent>\r\n              <DialogContentText>\r\n                Please enter the information for the game\r\n              </DialogContentText>\r\n              <TextField id=\"name\" label=\"Name\" autoFocus margin=\"dense\" required\r\n                fullWidth onChange={e => setName(e.target.value)}\r\n              />\r\n              <TextField id=\"password\" label=\"Password\" margin=\"dense\"\r\n                fullWidth onChange={e => setPassword(e.target.value)}\r\n              />\r\n              <div style={{ display: \"inline-flex\", alignItems: \"center\" }}>\r\n                <Typography>\r\n                  Is Blocked Rule\r\n                </Typography>\r\n                <Checkbox onChange={e => setIsBlockedRule(e.target.checked)} />\r\n              </div>\r\n\r\n              <div>\r\n                <Typography style={{ display: \"inline-flex\", alignItems: \"center\" }}>\r\n                  Time to think each turn (seconds)\r\n                </Typography>\r\n                <Select labelId=\"demo-customized-select-label\" id=\"time\" value={timeThinkingEachTurn}\r\n                  style={{ marginLeft: \"10px\" }} onChange={e => setTimeThinkingEachTurn(e.target.value)}\r\n                >\r\n                  <MenuItem value={10}>10</MenuItem>\r\n                  <MenuItem value={30}>30</MenuItem>\r\n                  <MenuItem value={60}>60</MenuItem>\r\n                  <MenuItem value={90}>90</MenuItem>\r\n                </Select>\r\n              </div>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={handleClose} color=\"primary\">\r\n                Cancel\r\n              </Button>\r\n              <Button onClick={handleCreate} color=\"secondary\">\r\n                Create\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </Container>\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Games;","D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\Navbar\\navbar.js",[],"D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\Home\\home.js",["119"],"import React, { useState } from 'react';\r\nimport OnlineUsers from '../OnlineUsers/onlineUsers_Primary';\r\nimport background from '../../images/background.jpg';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { authen } from '../../utils/helper';\r\nimport config from '../../constants/config.json';\r\nconst API_URL = config.API_URL_TEST;\r\n\r\nconst homeBackground = {\r\n  marginTop: '-20px',\r\n  borderRadius: '0 0 0 200%',\r\n  // border: '1px solid grey',\r\n  borderTopWidth: '0',\r\n  width: '100%',\r\n  boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)'\r\n}\r\n\r\nfunction Home({ onlineUserList, socket }) {\r\n  const history = useHistory();\r\n  const [gameId, setGameId] = useState(\"\");\r\n  const [gamePassword, setGamePassword] = useState(\"\");\r\n  const [open, setOpen] = useState(false);\r\n  const userID = localStorage.getItem('userID');\r\n\r\n  const handleClickOpen = async () => {\r\n    const status = await authen();\r\n    if (status === 401) {\r\n      alert('Log in please');\r\n      history.push('/signin');\r\n      return;\r\n    }\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setGameId(\"\");\r\n    setGamePassword(\"\");\r\n  };\r\n\r\n  const handleQuickJoin = async () => {\r\n\r\n\r\n    const jwtToken = window.localStorage.getItem('jwtToken');\r\n    const data = {\r\n      gameID: gameId,\r\n      password: gamePassword\r\n    }\r\n    const res = await fetch(`${API_URL}/games/joinbyid`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${jwtToken}`\r\n      },\r\n      body: JSON.stringify(data)\r\n    });\r\n\r\n    const result = await res.json();\r\n\r\n    if (res.status === 200) {\r\n      history.push('/games/' + result.gameID);\r\n      socket.emit(\"join_game\", { gameID: result.gameID, userID });\r\n    } else {\r\n      alert(result.msg);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div style={{ position: 'relative' }}>\r\n      <img src={background} style={homeBackground} alt=\"Home background Image\" />\r\n      <div>\r\n        <OnlineUsers onlineUserList={onlineUserList} />\r\n      </div>\r\n      <div style={{ position: 'absolute', left: '5%', bottom: '20%', width: '25%' }}>\r\n        <div style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\r\n          <div>\r\n            <Button style={{ marginRight: '10px' }} fullWidth variant=\"outlined\" color=\"secondary\" onClick={handleClickOpen} >\r\n              Join Game\r\n            </Button>\r\n          </div>\r\n          <div>\r\n            <Button style={{ marginLeft: '10px' }} fullWidth variant=\"contained\" color=\"primary\"  >\r\n              Quick join\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n          <form >\r\n            <DialogTitle id=\"form-dialog-title\">Provide Game ID to join</DialogTitle>\r\n            <DialogContent>\r\n\r\n              <TextField autoFocus margin=\"dense\" label=\"Game ID\" fullWidth\r\n                onChange={(event) => { setGameId(event.target.value); }}\r\n              />\r\n              <TextField margin=\"dense\" label=\"Password (if needed)\" fullWidth\r\n                onChange={(event) => { setGamePassword(event.target.value); }}\r\n              />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={handleQuickJoin} color=\"secondary\">\r\n                Go\r\n              </Button>\r\n              <Button onClick={handleClose} color=\"primary\">\r\n                Cancel\r\n              </Button>\r\n            </DialogActions>\r\n          </form>\r\n        </Dialog>\r\n      </div>\r\n    </div >\r\n  );\r\n}\r\nexport default Home;","D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\utils\\helper.js",[],"D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\Game\\board.js",[],"D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\Game\\gameServices.js",[],"D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\OnlineUsers\\onlineUsers_Primary.js",["120"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport MinimizeIcon from '@material-ui/icons/Minimize';\r\nimport List from '@material-ui/core/List';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Input from '@material-ui/core/Input';\r\nimport FaceIcon from '@material-ui/icons/Face';\r\nimport Badge from '@material-ui/core/Badge';\r\n\r\nconst StyledBadge = withStyles((theme) => ({\r\n  badge: {\r\n    right: 5,\r\n    top: 30,\r\n    border: `1px solid ${theme.palette.background.paper}`,\r\n    padding: '0 4px',\r\n    background: ' green',\r\n  },\r\n}))(Badge);\r\n\r\nconst drawerWidth = 300;\r\nconst useStyles = makeStyles((theme) => ({\r\n  list: {\r\n    position: \"fixed\",\r\n    right: 30,\r\n    bottom: 0,\r\n    border: '2px solid grey',\r\n    borderBottomWidth: '0',\r\n    width: '300px',\r\n    borderRadius: '8px 8px 0 0',\r\n    maxHeight: '80%',\r\n    // overflowY: 'scroll',\r\n    overflow: 'auto',\r\n    background: '#f2f2f2'\r\n  },\r\n  card: {\r\n    position: \"fixed\",\r\n    right: 30,\r\n    bottom: 0,\r\n    border: `1px solid #3f51b5`,\r\n    borderRadius: '5px 5px 0 0',\r\n    width: '300px',\r\n    height: '50px',\r\n    background: '#3f51b5',\r\n    cursor: 'pointer',\r\n    display: 'inline-block',\r\n    color: 'white',\r\n    padding: '15px',\r\n    fontWeight: 'bold',\r\n  },\r\n\r\n  paperShadow: {\r\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)'\r\n  },\r\n\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-start',\r\n  },\r\n  floatLeft: {\r\n    float: 'left'\r\n  },\r\n  floatRight: {\r\n    float: 'right'\r\n  }\r\n\r\n}));\r\n\r\nexport default function OnlineUsers({ onlineUserList }) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const [searchString, setSearchString] = useState(\"\");\r\n  const [onlineUserListCopy, setOnlineUserListCopy] = useState([]);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setSearchString(\"\");\r\n    setOpen(true);\r\n  }\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n\r\n  }\r\n  useEffect(() => {\r\n    setOnlineUserListCopy(onlineUserList.slice());\r\n  }, [onlineUserList]);\r\n\r\n  useEffect(() => {\r\n    if (searchString !== \"\")// có nội dung cần tìm\r\n    {\r\n      // console.log(\"v\");\r\n      setOnlineUserListCopy(onlineUserListCopy.slice()\r\n        .filter(user => user.Name.toLowerCase().includes(searchString.toLowerCase())))\r\n    }\r\n    else {\r\n      setOnlineUserListCopy(onlineUserList);\r\n    }\r\n  }, [searchString, onlineUserList]); // 2nd dependency help make sure new client connects will not make filtered list wrong\r\n\r\n\r\n  return (\r\n    <>\r\n      {open ?\r\n        <div className={`${classes.list} ${classes.paperShadow}`}>\r\n          <div className={classes.drawerHeader}>\r\n            <Input\r\n              placeholder=\"Username here\"\r\n              onChange={(event) => { setSearchString(event.target.value) }}\r\n              fullWidth\r\n              style={{ position: 'sticky' }}\r\n            />\r\n            <IconButton onClick={handleDrawerClose}>\r\n              <MinimizeIcon />\r\n            </IconButton>\r\n          </div>\r\n          <List >\r\n            {onlineUserListCopy.length === 0 ?\r\n              <div >No user found</div>\r\n              :\r\n              onlineUserListCopy.map((item) => (\r\n                <ListItem key={item.ID}>\r\n                  <ListItemIcon >\r\n                    <StyledBadge badgeContent={\"\"} >\r\n                      <FaceIcon fontSize=\"large\" />\r\n                    </StyledBadge>\r\n                  </ListItemIcon>\r\n                  <ListItemText primary={item.Name} />\r\n                  {/* <Button variant=\"outlined\" style={{ fontSize: '12px', borderRadius: '5px', padding: '2px' }}>Invite</Button> */}\r\n                </ListItem>\r\n              ))}\r\n          </List>\r\n        </div>\r\n        :\r\n        <div className={`${classes.card} ${classes.paperShadow}`} onClick={() => handleDrawerOpen()}>\r\n          <div className={classes.floatLeft}>\r\n            Online Users\r\n          </div>\r\n          <div className={classes.floatRight} style={{ marginRight: '10px' }}>\r\n            <Badge badgeContent={onlineUserList.length} color=\"secondary\" />\r\n          </div>\r\n        </div>\r\n      }\r\n\r\n    </>\r\n\r\n  );\r\n}\r\n","D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\Player\\player.js",[],"D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\Timer\\timer.js",["121"],"D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\OnlineUsers\\onlineUsers_Secondary.js",["122"],"import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\r\nimport Input from '@material-ui/core/Input';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport FaceIcon from '@material-ui/icons/Face';\r\nimport Badge from '@material-ui/core/Badge';\r\n\r\nconst StyledBadge = withStyles((theme) => ({\r\n  badge: {\r\n    right: 5,\r\n    top: 30,\r\n    border: `1px solid ${theme.palette.background.paper}`,\r\n    padding: '0 4px',\r\n    background: ' green',\r\n  },\r\n}))(Badge);\r\n\r\nconst drawerWidth = 300;\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginRight: drawerWidth,\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-start',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginRight: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginRight: 0,\r\n  },\r\n}));\r\n\r\nexport default function OnlineUsers({ onlineUserList }) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const [searchString, setSearchString] = useState(\"\");\r\n  const [onlineUserListCopy, setOnlineUserListCopy] = useState([]);\r\n  const userID = localStorage.getItem(\"userID\");\r\n\r\n  const handleDrawerOpen = () => {\r\n    setSearchString(\"\");\r\n    setOpen(true);\r\n  }\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n\r\n  }\r\n  useEffect(() => {\r\n    setOnlineUserListCopy(onlineUserList.slice());\r\n  }, [onlineUserList]);\r\n\r\n  useEffect(() => {\r\n\r\n    if (searchString !== \"\")// có nội dung cần tìm\r\n    {\r\n      console.log(\"v\");\r\n      setOnlineUserListCopy(onlineUserListCopy.slice()\r\n        .filter(user => user.Name.toLowerCase().includes(searchString.toLowerCase())))\r\n    } else {\r\n      setOnlineUserListCopy(onlineUserList);\r\n    }\r\n  }, [searchString, onlineUserList]); // 2nd dependency help make sure new client connects will not make filtered list wrong\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton color=\"inherit\" aria-label=\"open drawer\" edge=\"end\"\r\n        onClick={handleDrawerOpen} className={clsx(open && classes.hide)}\r\n        style={{\r\n          position: 'absolute',\r\n          top: -10,\r\n          right: 25,\r\n          zIndex: 1,\r\n          alignContent: 'center',\r\n          fontSize: '4',\r\n          borderRadius: '50%',\r\n          height: '60px',\r\n          width: '60px',\r\n          color: '#FFF',\r\n          backgroundImage: 'linear-gradient(to right, #24C6DC 0%, #514A9D 100%)',\r\n          boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\r\n        }}\r\n      >\r\n        <GroupAddIcon />\r\n      </IconButton>\r\n      <Drawer className={classes.drawer} variant=\"temporary\" anchor=\"right\"\r\n        open={open} classes={{ paper: classes.drawerPaper }} onClose={handleDrawerClose}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <CloseIcon />\r\n          </IconButton>\r\n          <Input placeholder=\"Username here\"\r\n            onChange={(event) => { setSearchString(event.target.value) }}\r\n          />\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          {onlineUserListCopy.map((item) => (\r\n            <ListItem key={item.ID}>\r\n              <ListItemIcon >\r\n                <StyledBadge badgeContent={\"\"} >\r\n                  <FaceIcon fontSize=\"large\" />\r\n                </StyledBadge>\r\n              </ListItemIcon>\r\n              <ListItemText primary={item.Name} />\r\n              {item.ID !== userID ?\r\n                <Button variant=\"outlined\" style={{ fontSize: '12px', borderRadius: '5px', padding: '2px' }}>Invite</Button>\r\n                :\r\n                <></>\r\n              }\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\Dialogs\\ChangePasswordDialog\\index.js",["123","124"],"import React, { useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\n// import DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n// import { isBlankString } from '../../../utils/index'; //'../../../utils/index'\r\n\r\nexport default function FormDialog() {\r\n    const [open, setOpen] = useState(false);\r\n    const [currentPassword, setCurrentPassword] = useState(\"\");\r\n    const [newPassword, setNewPassword] = useState(\"\");\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        setCurrentPassword(\"\");\r\n        setNewPassword(\"\");\r\n    };\r\n\r\n    const handleChangePassword = (event) => {\r\n        event.preventDefault();\r\n        // console.log(currentPassword)\r\n        // if (currentPassword === \"\" || newPassword === \"\" || confirmPassword === \"\") {\r\n        //     alert('Please fill out all these fields')\r\n        //     return;\r\n        // } else if (isBlankString(currentPassword) || isBlankString(newPassword) || isBlankString(confirmPassword)) {\r\n        //     alert('Some fields are a blank string')\r\n        //     return;\r\n        // } else if (newPassword !== confirmPassword) {\r\n        //     alert('Confirm password does not match')\r\n        //     return;\r\n        // }\r\n\r\n        // const userID = localStorage.getItem('userID');\r\n        // const token = window.localStorage.getItem('jwtToken')\r\n        // fetch(`https://my-retro-api.herokuapp.com/profile/password/${userID}`, {\r\n        //     method: 'POST',\r\n        //     body: JSON.stringify({ currentPassword, newPassword, confirmPassword }),\r\n        //     headers: {\r\n        //         'Content-Type': 'application/json',\r\n        //         Authorization: `Bearer ${token}`\r\n        //     }\r\n        // }).then(res => {\r\n        //     if (res.status === 200 || res.status === 400) {\r\n        //         res.json().then(result => {\r\n        //             alert(result.mesg);\r\n        //             // console.log(result.token);\r\n        //             // console.log(result.id)\r\n        //             // console.log(result.name)\r\n\r\n        //             // window.localStorage.setItem('jwtToken', result.token);\r\n        //             // window.localStorage.setItem('userID', result.id);\r\n        //             // window.localStorage.setItem('userName', result.name);\r\n        //             // history.push(\"/dashboard\");\r\n        //         });\r\n        //     } else if (res.status === 401) {// authenticate thất bại tự trả 401\r\n        //         alert(\"You have to log in\")\r\n        //     }\r\n        // }).catch(err => {\r\n        //     console.error(err);\r\n        //     alert('Error change password please try again');\r\n        // });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Button fullWidth variant=\"outlined\" color=\"secondary\" onClick={handleClickOpen} startIcon={<SaveIcon />}>\r\n                Change password\r\n            </Button>\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <form >\r\n                    <DialogTitle id=\"form-dialog-title\">Change password</DialogTitle>\r\n                    <DialogContent>\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"currentPassword\"\r\n                            name=\"currentPassword\"\r\n                            label=\"Current password\"\r\n                            type=\"password\"\r\n                            fullWidth\r\n                            onChange={(event) => { setCurrentPassword(event.target.value); }}\r\n                        />\r\n                        <TextField\r\n\r\n                            margin=\"dense\"\r\n                            id=\"newPassword\"\r\n                            name=\"newPassword\"\r\n                            label=\"New password\"\r\n                            type=\"password\"\r\n                            fullWidth\r\n                            onChange={(event) => { setNewPassword(event.target.value); }}\r\n                        />\r\n\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button /*onClick={handleClose}*/ onClick={handleChangePassword} color=\"secondary\">\r\n                            Update\r\n                        </Button>\r\n                        <Button onClick={handleClose} color=\"primary\">\r\n                            Cancel\r\n                        </Button>\r\n\r\n                    </DialogActions>\r\n                </form>\r\n\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n","D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\Dialogs\\ImageUploadDialog\\index.js",["125"],"import React, { useState } from 'react'\r\nimport { DropzoneDialog } from 'material-ui-dropzone'\r\nimport Button from '@material-ui/core/Button';\r\nimport AddPhotoAlternateIcon from '@material-ui/icons/AddPhotoAlternate';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    margin: {\r\n        margin: '10px 0 40px',\r\n        alignItems: 'center'\r\n    }\r\n}));\r\n\r\nexport default function ImageUploadDialog() {\r\n    const classes = useStyles();\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [files, setFile] = useState([]);\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }\r\n\r\n    const handleSave = (files) => {\r\n        //Saving files to state for further use and closing Modal.\r\n        // this.setState({\r\n        //     files: files,\r\n        //     open: false\r\n        // });\r\n        console.log(files);\r\n        setFile(files);\r\n        setOpen(false);\r\n    }\r\n\r\n    const handleOpen = () => {\r\n        // this.setState({\r\n        //     open: true,\r\n        // });\r\n        setOpen(true);\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={classes.margin}>\r\n            <Button onClick={handleOpen} variant=\"contained\" color=\"primary\" component=\"span\" >\r\n                <AddPhotoAlternateIcon /> Choose an image\r\n            </Button>\r\n\r\n            <DropzoneDialog\r\n                open={open}\r\n                onSave={handleSave}\r\n                acceptedFiles={['image/jpeg', 'image/png', 'image/bmp']}\r\n                // showPreviews={true}\r\n                showPreviewsInDropzone={true}\r\n                showPreviews={false}\r\n                showFileNames={true}\r\n                filesLimit={1}\r\n                maxFileSize={5000000}\r\n                onClose={handleClose}\r\n            />\r\n        </div>\r\n    );\r\n}","D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\Game\\square.js",[],"D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\GameList\\gamelist.js",[],"D:\\Code\\webapp\\PTUDWNC_CaroOnline\\caro_app\\src\\components\\GameList\\gameitem.js",[],{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":18,"column":10,"nodeType":"132","messageId":"133","endLine":18,"endColumn":16},{"ruleId":"130","severity":1,"message":"134","line":81,"column":9,"nodeType":"132","messageId":"133","endLine":81,"endColumn":16},{"ruleId":"130","severity":1,"message":"135","line":87,"column":13,"nodeType":"132","messageId":"133","endLine":87,"endColumn":16},{"ruleId":"136","severity":1,"message":"137","line":138,"column":6,"nodeType":"138","endLine":138,"endColumn":8,"suggestions":"139"},{"ruleId":"136","severity":1,"message":"140","line":151,"column":6,"nodeType":"138","endLine":151,"endColumn":8,"suggestions":"141"},{"ruleId":"136","severity":1,"message":"142","line":166,"column":6,"nodeType":"138","endLine":166,"endColumn":12,"suggestions":"143"},{"ruleId":"136","severity":1,"message":"144","line":188,"column":6,"nodeType":"138","endLine":188,"endColumn":22,"suggestions":"145"},{"ruleId":"136","severity":1,"message":"144","line":196,"column":6,"nodeType":"138","endLine":196,"endColumn":14,"suggestions":"146"},{"ruleId":"136","severity":1,"message":"144","line":241,"column":6,"nodeType":"138","endLine":241,"endColumn":22,"suggestions":"147"},{"ruleId":"136","severity":1,"message":"148","line":263,"column":6,"nodeType":"138","endLine":263,"endColumn":14,"suggestions":"149"},{"ruleId":"136","severity":1,"message":"150","line":314,"column":6,"nodeType":"138","endLine":314,"endColumn":42,"suggestions":"151"},{"ruleId":"136","severity":1,"message":"152","line":410,"column":6,"nodeType":"138","endLine":410,"endColumn":67,"suggestions":"153"},{"ruleId":"136","severity":1,"message":"154","line":72,"column":6,"nodeType":"138","endLine":72,"endColumn":8,"suggestions":"155"},{"ruleId":"136","severity":1,"message":"156","line":88,"column":6,"nodeType":"138","endLine":88,"endColumn":8,"suggestions":"157"},{"ruleId":"136","severity":1,"message":"158","line":107,"column":6,"nodeType":"138","endLine":107,"endColumn":8,"suggestions":"159"},{"ruleId":"160","severity":1,"message":"161","line":76,"column":7,"nodeType":"162","endLine":76,"endColumn":82},{"ruleId":"136","severity":1,"message":"163","line":112,"column":6,"nodeType":"138","endLine":112,"endColumn":36,"suggestions":"164"},{"ruleId":"136","severity":1,"message":"165","line":43,"column":6,"nodeType":"138","endLine":43,"endColumn":41,"suggestions":"166"},{"ruleId":"136","severity":1,"message":"163","line":118,"column":6,"nodeType":"138","endLine":118,"endColumn":36,"suggestions":"167"},{"ruleId":"130","severity":1,"message":"168","line":14,"column":12,"nodeType":"132","messageId":"133","endLine":14,"endColumn":27},{"ruleId":"130","severity":1,"message":"169","line":15,"column":12,"nodeType":"132","messageId":"133","endLine":15,"endColumn":23},{"ruleId":"130","severity":1,"message":"170","line":18,"column":12,"nodeType":"132","messageId":"133","endLine":18,"endColumn":17},"no-native-reassign",["171"],"no-negated-in-lhs",["172"],"no-unused-vars","'authen' is defined but never used.","Identifier","unusedVar","'history' is assigned a value but never used.","'res' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'History'. Either include it or remove the dependency array.","ArrayExpression",["173"],"React Hook useEffect has missing dependencies: 'game', 'gameID', and 'getGame'. Either include them or remove the dependency array.",["174"],"React Hook useEffect has missing dependencies: 'getPlayer' and 'userID'. Either include them or remove the dependency array.",["175"],"React Hook useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array.",["176"],["177"],["178"],"React Hook useEffect has missing dependencies: 'socket' and 'userID'. Either include them or remove the dependency array.",["179"],"React Hook useEffect has missing dependencies: 'getPlayer', 'player2.ID', 'socket', 'updateGameInfo', and 'userID'. Either include them or remove the dependency array.",["180"],"React Hook useEffect has missing dependencies: 'player', 'player1', 'player2.Elo', 'player2.ID', 'updateGameInfo', 'updatePlayersInfo', and 'userID'. Either include them or remove the dependency array.",["181"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["182"],"React Hook useEffect has a missing dependency: 'jwtToken'. Either include it or remove the dependency array.",["183"],"React Hook useEffect has missing dependencies: 'history', 'socket', and 'userID'. Either include them or remove the dependency array.",["184"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'onlineUserListCopy'. Either include it or remove the dependency array. You can also do a functional update 'setOnlineUserListCopy(o => ...)' if you only need 'onlineUserListCopy' in the 'setOnlineUserListCopy' call.",["185"],"React Hook useEffect has missing dependencies: 'elo', 'gameID', 'isPlayer2', 'player1', 'player2', 'socket', and 'value'. Either include them or remove the dependency array. If 'setSeconds' needs the current value of 'value', you can also switch to useReducer instead of useState and read 'value' in the reducer.",["186"],["187"],"'currentPassword' is assigned a value but never used.","'newPassword' is assigned a value but never used.","'files' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},{"desc":"194","fix":"195"},{"desc":"196","fix":"197"},{"desc":"194","fix":"198"},{"desc":"194","fix":"199"},{"desc":"200","fix":"201"},{"desc":"202","fix":"203"},{"desc":"204","fix":"205"},{"desc":"206","fix":"207"},{"desc":"208","fix":"209"},{"desc":"210","fix":"211"},{"desc":"212","fix":"213"},{"desc":"210","fix":"214"},"Update the dependencies array to be: [History]",{"range":"215","text":"216"},"Update the dependencies array to be: [game, gameID, getGame]",{"range":"217","text":"218"},"Update the dependencies array to be: [game, getPlayer, userID]",{"range":"219","text":"220"},"Update the dependencies array to be: [gameID, socket, userID]",{"range":"221","text":"222"},"Update the dependencies array to be: [gameID, socket]",{"range":"223","text":"224"},{"range":"225","text":"222"},{"range":"226","text":"222"},"Update the dependencies array to be: [gameID, history, chatHistory, game, socket, getPlayer, userID, player2.ID, updateGameInfo]",{"range":"227","text":"228"},"Update the dependencies array to be: [winner, hasWinner, isMainPlayer, history, chatHistory, game, player1, player2.Elo, player2.ID, player, updatePlayersInfo, userID, updateGameInfo]",{"range":"229","text":"230"},"Update the dependencies array to be: [history]",{"range":"231","text":"232"},"Update the dependencies array to be: [jwtToken]",{"range":"233","text":"234"},"Update the dependencies array to be: [history, socket, userID]",{"range":"235","text":"236"},"Update the dependencies array to be: [searchString, onlineUserList, onlineUserListCopy]",{"range":"237","text":"238"},"Update the dependencies array to be: [seconds, isYourTurn, isMainPlayer, value, isPlayer2, elo, socket, gameID, player1, player2]",{"range":"239","text":"240"},{"range":"241","text":"238"},[4684,4686],"[History]",[5045,5047],"[game, gameID, getGame]",[5492,5498],"[game, getPlayer, userID]",[6075,6091],"[gameID, socket, userID]",[6299,6307],"[gameID, socket]",[8031,8047],[8642,8650],[10012,10048],"[gameID, history, chatHistory, game, socket, getPlayer, userID, player2.ID, updateGameInfo]",[12565,12626],"[winner, hasWinner, isMainPlayer, history, chatHistory, game, player1, player2.Elo, player2.ID, player, updatePlayersInfo, userID, updateGameInfo]",[2455,2457],"[history]",[2867,2869],"[jwtToken]",[3342,3344],"[history, socket, userID]",[2935,2965],"[searchString, onlineUserList, onlineUserListCopy]",[1327,1362],"[seconds, isYourTurn, isMainPlayer, value, isPlayer2, elo, socket, gameID, player1, player2]",[3470,3500]]