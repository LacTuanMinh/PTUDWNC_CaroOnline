[{"D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\index.js":"1","D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\App.js":"2","D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\Components\\Login\\index.js":"3","D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\Components\\Profile\\index.js":"4","D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\Components\\Navbar\\index.js":"5","D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\Utils\\helper.js":"6","D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\Components\\Dialogs\\ChangePasswordDialog\\index.js":"7","D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\Components\\Dialogs\\ImageUploadDialog\\index.js":"8","D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\Components\\Home\\index.js":"9","D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\Components\\Footer\\index.js":"10"},{"size":175,"mtime":1607428977473,"results":"11","hashOfConfig":"12"},{"size":952,"mtime":1607431053387,"results":"13","hashOfConfig":"12"},{"size":4162,"mtime":1607436646403,"results":"14","hashOfConfig":"12"},{"size":9201,"mtime":1607430960262,"results":"15","hashOfConfig":"12"},{"size":3033,"mtime":1607436812101,"results":"16","hashOfConfig":"12"},{"size":428,"mtime":1607434851584,"results":"17","hashOfConfig":"12"},{"size":5517,"mtime":1607240503905,"results":"18","hashOfConfig":"12"},{"size":1820,"mtime":1607430213434,"results":"19","hashOfConfig":"12"},{"size":549,"mtime":1607436651797,"results":"20","hashOfConfig":"12"},{"size":1211,"mtime":1607435342486,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"pyl54a",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\index.js",[],["45","46"],"D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\App.js",[],"D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\Components\\Login\\index.js",[],"D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\Components\\Profile\\index.js",[],"D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\Components\\Navbar\\index.js",["47","48","49"],"D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\Utils\\helper.js",[],"D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\Components\\Dialogs\\ChangePasswordDialog\\index.js",["50","51","52"],"import React, { useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\n// import DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n// import { isBlankString } from '../../../utils/index'; //'../../../utils/index'\r\n\r\nexport default function FormDialog() {\r\n    const [open, setOpen] = useState(false);\r\n    const [currentPassword, setCurrentPassword] = useState(\"\");\r\n    const [newPassword, setNewPassword] = useState(\"\");\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        setCurrentPassword(\"\");\r\n        setNewPassword(\"\");\r\n        setConfirmPassword(\"\")\r\n    };\r\n\r\n    const handleChangePassword = (event) => {\r\n        event.preventDefault();\r\n        // console.log(currentPassword)\r\n        // if (currentPassword === \"\" || newPassword === \"\" || confirmPassword === \"\") {\r\n        //     alert('Please fill out all these fields')\r\n        //     return;\r\n        // } else if (isBlankString(currentPassword) || isBlankString(newPassword) || isBlankString(confirmPassword)) {\r\n        //     alert('Some fields are a blank string')\r\n        //     return;\r\n        // } else if (newPassword !== confirmPassword) {\r\n        //     alert('Confirm password does not match')\r\n        //     return;\r\n        // }\r\n\r\n        // const userID = localStorage.getItem('userID');\r\n        // const token = window.localStorage.getItem('jwtToken')\r\n        // fetch(`https://my-retro-api.herokuapp.com/profile/password/${userID}`, {\r\n        //     method: 'POST',\r\n        //     body: JSON.stringify({ currentPassword, newPassword, confirmPassword }),\r\n        //     headers: {\r\n        //         'Content-Type': 'application/json',\r\n        //         Authorization: `Bearer ${token}`\r\n        //     }\r\n        // }).then(res => {\r\n        //     if (res.status === 200 || res.status === 400) {\r\n        //         res.json().then(result => {\r\n        //             alert(result.mesg);\r\n        //             // console.log(result.token);\r\n        //             // console.log(result.id)\r\n        //             // console.log(result.name)\r\n\r\n        //             // window.localStorage.setItem('jwtToken', result.token);\r\n        //             // window.localStorage.setItem('userID', result.id);\r\n        //             // window.localStorage.setItem('userName', result.name);\r\n        //             // history.push(\"/dashboard\");\r\n        //         });\r\n        //     } else if (res.status === 401) {// authenticate thất bại tự trả 401\r\n        //         alert(\"You have to log in\")\r\n        //     }\r\n        // }).catch(err => {\r\n        //     console.error(err);\r\n        //     alert('Error change password please try again');\r\n        // });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Button fullWidth variant=\"outlined\" color=\"secondary\" onClick={handleClickOpen} startIcon={<SaveIcon />}>\r\n                Change password\r\n            </Button>\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <form >\r\n                    <DialogTitle id=\"form-dialog-title\">Change password</DialogTitle>\r\n                    <DialogContent>\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"currentPassword\"\r\n                            name=\"currentPassword\"\r\n                            label=\"Current password\"\r\n                            type=\"password\"\r\n                            fullWidth\r\n                            onChange={(event) => { setCurrentPassword(event.target.value); }}\r\n                        />\r\n                        <TextField\r\n\r\n                            margin=\"dense\"\r\n                            id=\"newPassword\"\r\n                            name=\"newPassword\"\r\n                            label=\"New password\"\r\n                            type=\"password\"\r\n                            fullWidth\r\n                            onChange={(event) => { setNewPassword(event.target.value); }}\r\n                        />\r\n                        <TextField\r\n\r\n                            margin=\"dense\"\r\n                            id=\"confirmPassword\"\r\n                            name=\"confirmPassword\"\r\n                            label=\"Confirm password\"\r\n                            type=\"password\"\r\n                            fullWidth\r\n                            onChange={(event) => { setConfirmPassword(event.target.value); }}\r\n                        />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button /*onClick={handleClose}*/ onClick={handleChangePassword} color=\"secondary\">\r\n                            Update\r\n                        </Button>\r\n                        <Button onClick={handleClose} color=\"primary\">\r\n                            Cancel\r\n                        </Button>\r\n\r\n                    </DialogActions>\r\n                </form>\r\n\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n","D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\Components\\Dialogs\\ImageUploadDialog\\index.js",["53"],"import React, { useState } from 'react'\r\nimport { DropzoneDialog } from 'material-ui-dropzone'\r\nimport Button from '@material-ui/core/Button';\r\n// import AddPhotoAlternateIcon from '@material-ui/icons/AddPhotoAlternate';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    margin: {\r\n        margin: '10px 0 40px',\r\n        alignItems: 'center'\r\n    }\r\n}));\r\n\r\nexport default function ImageUploadDialog() {\r\n    const classes = useStyles();\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [files, setFile] = useState([]);\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }\r\n\r\n    const handleSave = (files) => {\r\n        //Saving files to state for further use and closing Modal.\r\n        // this.setState({\r\n        //     files: files,\r\n        //     open: false\r\n        // });\r\n        console.log(files);\r\n        setFile(files);\r\n        setOpen(false);\r\n    }\r\n\r\n    const handleOpen = () => {\r\n        // this.setState({\r\n        //     open: true,\r\n        // });\r\n        setOpen(true);\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={classes.margin}>\r\n            <Button onClick={handleOpen} variant=\"contained\" color=\"primary\" component=\"span\" >\r\n                {/* <AddPhotoAlternateIcon /> Choose an image */}\r\n            </Button>\r\n\r\n            <DropzoneDialog\r\n                open={open}\r\n                onSave={handleSave}\r\n                acceptedFiles={['image/jpeg', 'image/png', 'image/bmp']}\r\n                // showPreviews={true}\r\n                showPreviewsInDropzone={true}\r\n                showPreviews={false}\r\n                showFileNames={true}\r\n                filesLimit={1}\r\n                maxFileSize={5000000}\r\n                onClose={handleClose}\r\n            />\r\n        </div>\r\n    );\r\n}","D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\Components\\Home\\index.js",["54"],"D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\Components\\Footer\\index.js",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":1,"column":27,"nodeType":"61","messageId":"62","endLine":1,"endColumn":36},{"ruleId":"59","severity":1,"message":"63","line":3,"column":10,"nodeType":"61","messageId":"62","endLine":3,"endColumn":14},{"ruleId":"59","severity":1,"message":"64","line":3,"column":16,"nodeType":"61","messageId":"62","endLine":3,"endColumn":26},{"ruleId":"59","severity":1,"message":"65","line":14,"column":12,"nodeType":"61","messageId":"62","endLine":14,"endColumn":27},{"ruleId":"59","severity":1,"message":"66","line":15,"column":12,"nodeType":"61","messageId":"62","endLine":15,"endColumn":23},{"ruleId":"59","severity":1,"message":"67","line":16,"column":12,"nodeType":"61","messageId":"62","endLine":16,"endColumn":27},{"ruleId":"59","severity":1,"message":"68","line":18,"column":12,"nodeType":"61","messageId":"62","endLine":18,"endColumn":17},{"ruleId":"59","severity":1,"message":"69","line":1,"column":28,"nodeType":"61","messageId":"62","endLine":1,"endColumn":36},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'useHistory' is defined but never used.","'currentPassword' is assigned a value but never used.","'newPassword' is assigned a value but never used.","'confirmPassword' is assigned a value but never used.","'files' is assigned a value but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]