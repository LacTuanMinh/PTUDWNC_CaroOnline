[{"D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\index.js":"1","D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\App.js":"2","D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\Components\\Footer\\index.js":"3","D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\Components\\Home\\index.js":"4","D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\Components\\Profile\\index.js":"5","D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\Components\\SignIn\\index.js":"6","D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\Components\\Navbar\\index.js":"7","D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\Components\\Dialogs\\ChangePasswordDialog\\index.js":"8","D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\Components\\Dialogs\\ImageUploadDialog\\index.js":"9","D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\components\\Profile\\index.js":"10","D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\components\\Navbar\\index.js":"11","D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\components\\Home\\index.js":"12","D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\components\\SignIn\\index.js":"13","D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\components\\Footer\\index.js":"14","D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\components\\Dialogs\\ChangePasswordDialog\\index.js":"15","D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\components\\Dialogs\\ImageUploadDialog\\index.js":"16","D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\utils\\helper.js":"17","D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\components\\SnackBar\\snackbar.js":"18","D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\components\\UserManagement\\index.js":"19","D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\components\\UserDetail\\index.js":"20","D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\components\\Dialogs\\PlayedGamesDialog\\index.js":"21","D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\components\\PlayedGame\\index.js":"22","D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\components\\PlayedGame\\Game\\board.js":"23","D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\components\\PlayedGame\\Game\\gameServices.js":"24","D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\components\\PlayedGame\\Game\\square.js":"25"},{"size":175,"mtime":1607428977473,"results":"26","hashOfConfig":"27"},{"size":1666,"mtime":1609567111335,"results":"28","hashOfConfig":"27"},{"size":1211,"mtime":1607435342486,"results":"29","hashOfConfig":"27"},{"size":541,"mtime":1607516492314,"results":"30","hashOfConfig":"27"},{"size":9232,"mtime":1607518544218,"results":"31","hashOfConfig":"27"},{"size":4290,"mtime":1607518260457,"results":"32","hashOfConfig":"27"},{"size":2928,"mtime":1607516492338,"results":"33","hashOfConfig":"27"},{"size":5517,"mtime":1607240503905,"results":"34","hashOfConfig":"27"},{"size":1822,"mtime":1607516492313,"results":"35","hashOfConfig":"27"},{"size":10974,"mtime":1609515155021,"results":"36","hashOfConfig":"27"},{"size":3983,"mtime":1609571419112,"results":"37","hashOfConfig":"27"},{"size":2304,"mtime":1609485583393,"results":"38","hashOfConfig":"27"},{"size":5273,"mtime":1609154316540,"results":"39","hashOfConfig":"27"},{"size":1414,"mtime":1609559236150,"results":"40","hashOfConfig":"27"},{"size":6008,"mtime":1609337227124,"results":"41","hashOfConfig":"27"},{"size":1917,"mtime":1609337227125,"results":"42","hashOfConfig":"27"},{"size":803,"mtime":1609337227132,"results":"43","hashOfConfig":"27"},{"size":1522,"mtime":1609140704354,"results":"44","hashOfConfig":"27"},{"size":6146,"mtime":1609519704123,"results":"45","hashOfConfig":"27"},{"size":7026,"mtime":1609570768061,"results":"46","hashOfConfig":"27"},{"size":4025,"mtime":1609569645065,"results":"47","hashOfConfig":"27"},{"size":8128,"mtime":1609570293797,"results":"48","hashOfConfig":"27"},{"size":892,"mtime":1609567238940,"results":"49","hashOfConfig":"27"},{"size":7437,"mtime":1609567248413,"results":"50","hashOfConfig":"27"},{"size":322,"mtime":1609567165565,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"pyl54a",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\index.js",[],["107","108"],"D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\App.js",[],"D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\Components\\Footer\\index.js",[],"D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\Components\\Home\\index.js",[],"D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\Components\\Profile\\index.js",[],"D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\Components\\SignIn\\index.js",[],"D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\Components\\Navbar\\index.js",[],"D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\Components\\Dialogs\\ChangePasswordDialog\\index.js",["109","110","111"],"D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\Components\\Dialogs\\ImageUploadDialog\\index.js",["112"],"D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\components\\Profile\\index.js",["113","114"],"import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport ChangePasswordDialog from '../Dialogs/ChangePasswordDialog';\r\nimport ImageUploadDialog from '../Dialogs/ImageUploadDialog';\r\nimport defaultAvatar from '../../images/defaultAvatar.jpg';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\r\nimport ReplayIcon from '@material-ui/icons/Replay';\r\nimport SimpleSnackbar from '../SnackBar/snackbar';\r\nimport config from '../../constants/config.json';\r\nimport { isBlankString, isEmailPattern } from '../../utils/helper';\r\n\r\nconst API_URL = config.API_URL_TEST;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  cardGrid: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  card: {\r\n    height: '100%',\r\n    flexDirection: 'column',\r\n  },\r\n  cardMedia: {\r\n    paddingTop: '25%',\r\n  },\r\n  cardHeader: {\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[700],\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(3),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: \"black\"//theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '75%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  container: {\r\n    display: 'inline-block',\r\n    width: '100%'\r\n  },\r\n  floatRight: {\r\n    float: \"right\",\r\n    width: '60%'\r\n  },\r\n  floatLeft: {\r\n    float: \"left\",\r\n    width: '40%'\r\n  },\r\n  paperLikeShadow: {\r\n    boxShadow: '0 4px 8px 5px rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\r\n  },\r\n  hidden: {\r\n    display: 'none'\r\n  }\r\n}));\r\n\r\nexport default function Profile() {\r\n  const classes = useStyles();\r\n  const userID = localStorage.getItem('userID');\r\n  const token = localStorage.getItem('jwtToken');\r\n  const history = useHistory();\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [validName, setValidName] = useState(true);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [validEmail, setValidEmail] = useState(true);\r\n  const [dateOfBirth, setDateOfBirth] = useState((new Date()).toISOString());\r\n  const [validDOB, setValidDOB] = useState(true);\r\n  const [avatar, setAvatar] = useState({});\r\n  const [info, setInfo] = useState({});\r\n  const [contents, setContents] = useState([]);\r\n  const [showSnackbar, setShowSnackBar] = useState(false);\r\n\r\n  useEffect(() => {\r\n    async function ComponentWillMount() {\r\n      const res = await fetch(`${API_URL}/users/profile/${userID}`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      });\r\n\r\n      if (res.status === 200) {\r\n        const result = await res.json();\r\n        setInfo(result.userInfo);\r\n        setName(result.userInfo.Name);\r\n        setEmail(result.userInfo.Email);\r\n        setAvatar(result.userInfo.Avatar);\r\n        setDateOfBirth(result.userInfo.DateOfBirth);\r\n      } else {\r\n        history.push('/signin');\r\n        return;\r\n      }\r\n\r\n    }\r\n    ComponentWillMount();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    async function retrieveAvatar() {\r\n      const res = await fetch(`${API_URL}/users/avatar/${userID}`, {\r\n        method: 'GET',\r\n        headers: {\r\n          ContentType: 'image/jpeg',\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      });\r\n\r\n      if (res.status === 200) {\r\n        const result = await res.blob();\r\n        console.log(result);\r\n        setAvatar(URL.createObjectURL(result));\r\n      }\r\n    }\r\n    retrieveAvatar();\r\n  }, [setAvatar]);\r\n\r\n  const handleNameChange = (name) => {\r\n    setName(name);\r\n    if (isBlankString(name)) {\r\n      setContents(contents => [...contents.filter(content => content.id !== 1), { id: 1, msg: \"Name field can't be empty!!!\" }]);\r\n      setValidName(false);\r\n    } else {\r\n      setContents(contents.filter(content => content.id !== 1));\r\n      setValidName(true);\r\n    }\r\n  }\r\n\r\n  const handleEmailChange = (email) => {\r\n    setEmail(email);\r\n    if (isBlankString(email)) {\r\n      setContents(contents => [...contents.filter(content => content.id !== 2), { id: 2, msg: \"Email field can't be empty!!!\" }]);\r\n      setValidEmail(false);\r\n    }\r\n    else if (!isEmailPattern(email)) {// === false\r\n      setContents(contents => [...contents.filter(content => content.id !== 2), { id: 2, msg: \"Email field doesn't match the email format!!!\" }]);\r\n      setValidEmail(false);\r\n    }\r\n    else {\r\n      setContents(contents.filter(content => content.id !== 2));\r\n      setValidEmail(true);\r\n    }\r\n  }\r\n\r\n  const handleDateChange = (date) => {\r\n    setDateOfBirth(date.toISOString());\r\n    const now = new Date().toISOString()\r\n    if (dateOfBirth < now) {\r\n      setContents(contents.filter(content => content.id !== 3));\r\n      setValidDOB(true);\r\n    }\r\n    else {\r\n      setContents(contents => [...contents.filter(content => content.id !== 3), { id: 3, msg: \"Invalid date!!!\" }]);\r\n      setValidDOB(false);\r\n    }\r\n  }\r\n\r\n  const handleSaveChange = async () => {\r\n    if (validDOB && validEmail && validName) {\r\n\r\n      const data = {\r\n        Name: name,\r\n        Email: email,\r\n        DateOfBirth: dateOfBirth\r\n      }\r\n\r\n      const res = await fetch(`${API_URL}/users/profile/updateinfo/${userID}`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify(data),\r\n      });\r\n\r\n      // const result = await res.json();\r\n\r\n      if (res.status === 200) {\r\n\r\n        const infoCopy = JSON.parse(JSON.stringify(info));\r\n\r\n        infoCopy.Name = data.Name;\r\n        infoCopy.Email = data.Email;\r\n        infoCopy.DateOfBirth = data.DateOfBirth;\r\n        setInfo(infoCopy);\r\n        setShowSnackBar(true);\r\n\r\n      } else {\r\n        // alert(\"Some error when updating!\")\r\n      }\r\n\r\n    } else {\r\n      setShowSnackBar(true);\r\n    }\r\n  }\r\n\r\n  const handleResetInfo = () => {\r\n    setName(info.Name);\r\n    setEmail(info.Email);\r\n    setDateOfBirth(info.DateOfBirth);\r\n    setValidEmail(true);\r\n    setValidName(true);\r\n    setValidDOB(true);\r\n    setContents([]);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <SimpleSnackbar open={showSnackbar} setOpen={(isOpen) => setShowSnackBar(isOpen)} contents={contents} />\r\n\r\n      <Container component=\"main\" maxWidth=\"lg\">\r\n        <Grid container spacing={2}>\r\n\r\n          <Grid item xs={12} md={5}>\r\n            <div className={classes.paper} style={{ padding: '20px' }}>\r\n              <img height={200} width={200} style={{ borderRadius: '8px' }} className={classes.paperLikeShadow}\r\n                src={avatar ? avatar : defaultAvatar} alt=\"User avatar\"\r\n              />\r\n              <ImageUploadDialog setAvatar={setAvatar} setShowSnackBar={setShowSnackBar} />\r\n            </div>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={7}>\r\n            <div className={classes.paper}>\r\n              <Typography component=\"h2\" variant=\"h5\">\r\n                YOUR PROFILE\r\n                <IconButton onClick={handleResetInfo} title=\"Reset information\" color=\"primary\" aria-label=\"add an alarm\" style={{ fontSize: 'large' }} >\r\n                  <ReplayIcon />\r\n                </IconButton>\r\n              </Typography>\r\n              <div className={classes.form} >\r\n\r\n                <div className={classes.container}>\r\n                  <Typography className={classes.floatLeft} align=\"left\" component=\"h2\"><b> Name:</b> </Typography>\r\n                  {validName ?\r\n                    <></>\r\n                    :\r\n                    <Typography className={classes.floatRight} align=\"right\" style={{ color: \"red\" }}>Invalid</Typography>\r\n                  }\r\n                </div>\r\n                <TextField variant=\"outlined\" margin=\"normal\" required fullWidth autoFocus\r\n                  placeholder=\"Username\" value={name}\r\n                  onChange={(event) => { handleNameChange(event.target.value); }}\r\n                />\r\n\r\n                <div className={classes.container}>\r\n                  <Typography className={classes.floatLeft} align=\"left\" component=\"h2\"> <b>Email:</b>  </Typography>\r\n                  {validEmail ?\r\n                    <></>\r\n                    :\r\n                    <Typography className={classes.floatRight} align=\"right\" style={{ color: \"red\" }}>Invalid</Typography>\r\n                  }\r\n                </div>\r\n                <TextField variant=\"outlined\" margin=\"normal\" required fullWidth\r\n                  id=\"email\" name=\"email\" placeholder=\"Email\" value={email}\r\n                  onChange={(event) => { handleEmailChange(event.target.value); }}\r\n                />\r\n\r\n                <div className={classes.container}>\r\n                  <Typography align=\"left\" component=\"h2\" className={classes.floatLeft}>\r\n                    <b>Date of Birth:</b>\r\n                  </Typography>\r\n                  {validDOB ?\r\n                    <></>\r\n                    :\r\n                    <Typography className={classes.floatRight} align=\"right\" style={{ color: \"red\" }}>Invalid</Typography>\r\n                  }\r\n                </div>\r\n\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils} >\r\n                  <KeyboardDatePicker\r\n                    // disableToolbar\r\n                    variant=\"inline\"\r\n                    format=\"dd/MM/yyyy\"\r\n                    margin=\"normal\"\r\n                    id=\"date-picker-inline\"\r\n                    fullWidth value={dateOfBirth}\r\n                    onChange={handleDateChange}\r\n                    KeyboardButtonProps={{\r\n                      'aria-label': 'change date',\r\n                    }}\r\n                    placeholder=\"Date of Birth\"\r\n                  />\r\n                </MuiPickersUtilsProvider>\r\n                <Button type=\"submit\" fullWidth variant=\"outlined\" color=\"primary\" onClick={handleSaveChange}\r\n                  className={classes.submit} startIcon={<SaveIcon />}\r\n                >\r\n                  Save Change\r\n                </Button>\r\n                <Typography align=\"left\" component=\"h2\" style={{ marginTop: 10, marginBottom: 12, fontWeight: 'bold' }}> Passowrd: </Typography>\r\n                <ChangePasswordDialog />\r\n              </div>\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\components\\Navbar\\index.js",["115"],"D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\components\\Home\\index.js",["116"],"import React, { useEffect } from 'react';\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { authen } from '../../utils/helper';\r\nimport background from '../../images/background.jpg';\r\n\r\nfunction Home() {\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    async function Authen() {\r\n      const status = await authen();\r\n      if (status === 401) {\r\n        history.push('/signIn');\r\n      }\r\n    }\r\n    Authen();\r\n  }, []);\r\n\r\n  const container = {\r\n    position: 'relative',\r\n    marginBottom: '150px'\r\n  }\r\n\r\n  const boxShadow = {\r\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)'\r\n  }\r\n\r\n  const homeBackground = {\r\n    marginTop: '-23px',\r\n    borderRadius: '0 0 0 200%',\r\n    borderTopWidth: '0',\r\n    width: '100%',\r\n    height: '85%',\r\n    boxShadow: boxShadow.boxShadow\r\n  }\r\n\r\n  const managermentContent = {\r\n    fontSize: '1.5vw',\r\n    fontWeight: 'bold',\r\n    color: 'white',\r\n    display: 'table-cell',\r\n    verticalAlign: 'middle',\r\n    textAlign: 'left'\r\n  }\r\n\r\n  return (\r\n    <div style={container}>\r\n      <img src={background} style={homeBackground} alt=\"Home background\" />\r\n      <Typography style={{\r\n        position: 'absolute', left: '35%', top: '40%', fontSize: '5vw', color: 'white', fontWeight: 'bolder',\r\n        boxShadow: boxShadow.boxShadow\r\n      }}\r\n      >\r\n        Home page for our Admin\r\n      </Typography>\r\n\r\n      <Link to='/users'>\r\n        <div style={{\r\n          position: 'absolute', left: 0, top: '70%', width: '18vw', minHeight: '3.5vw', paddingLeft: '20px',\r\n          borderRadius: '0 5px 5px 0', backgroundColor: '#f6a00f', display: 'table', boxShadow: boxShadow.boxShadow\r\n        }}>\r\n          <Typography style={managermentContent}>User management</Typography>\r\n        </div>\r\n      </Link>\r\n      <Link to='/games'>\r\n        <div style={{\r\n          position: 'absolute', left: 0, top: '85%', width: '20vw', minHeight: '3.5vw', paddingLeft: '20px',\r\n          borderRadius: '0 5px 5px 0', backgroundColor: '#2f8fe6', display: 'table', boxShadow: boxShadow.boxShadow\r\n        }}>\r\n          <Typography style={managermentContent}>Game management</Typography>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\components\\SignIn\\index.js",[],"D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\components\\Footer\\index.js",[],"D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\components\\Dialogs\\ChangePasswordDialog\\index.js",["117"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport SimpleSnackbar from '../../SnackBar/snackbar';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport { isBlankString } from '../../../utils/helper'; //'../../../utils/index'\r\nimport config from '../../../constants/config.json';\r\nconst API_URL = config.API_URL_TEST;\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n\tcontainer: {\r\n\t\tdisplay: 'inline-block',\r\n\t\twidth: '100%'\r\n\t},\r\n\tfloatRight: {\r\n\t\tfloat: \"right\",\r\n\t\twidth: '60%'\r\n\t},\r\n\tfloatLeft: {\r\n\t\tfloat: \"left\",\r\n\t\twidth: '40%'\r\n\t},\r\n\tpaperLikeShadow: {\r\n\t\tboxShadow: '0 4px 8px 5px rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\r\n\t},\r\n\thidden: {\r\n\t\tdisplay: 'none'\r\n\t}\r\n}));\r\n\r\nexport default function FormDialog() {\r\n\tconst classes = useStyles();\r\n\tconst userID = localStorage.getItem('userID');\r\n\tconst token = window.localStorage.getItem('jwtToken');\r\n\tconst [open, setOpen] = useState(false);\r\n\tconst [currentPassword, setCurrentPassword] = useState(\"\");\r\n\tconst [newPassword, setNewPassword] = useState(\"\");\r\n\tconst [validCurentPassword, setValidCurentPassword] = useState(false);\r\n\tconst [validNewPassword, setValidNewPassword] = useState(false);\r\n\tconst [showSnackbar, setShowSnackBar] = useState(false);\r\n\tconst [contents, setContents] = useState([\r\n\t\t{ id: 4, msg: \"Password can't be empty!!!\" },\r\n\t\t{ id: 5, msg: \"New password can't be empty!!!\" },\r\n\t]);\r\n\r\n\tconst handleCurrentPasswordChange = (currentPassword) => {\r\n\t\tsetCurrentPassword(currentPassword);\r\n\t\tif (isBlankString(currentPassword)) {\r\n\t\t\tsetContents(contents => [...contents.filter(content => content.id !== 4), { id: 4, msg: \"Password can't be empty!!!\" }]);\r\n\t\t\tsetValidCurentPassword(false);\r\n\t\t} else if (currentPassword.length < 6) {\r\n\t\t\tsetContents(contents => [...contents.filter(content => content.id !== 4), { id: 4, msg: \"Password must have at least 6 characters!!!\" }]);\r\n\t\t\tsetValidCurentPassword(false);\r\n\t\t} else {\r\n\t\t\tsetContents(contents.filter(content => content.id !== 4));\r\n\t\t\tsetValidCurentPassword(true);\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleNewPasswordChange = (newPassword) => {\r\n\t\tsetNewPassword(newPassword);\r\n\t\tif (isBlankString(newPassword)) {\r\n\t\t\tsetContents(contents => [...contents.filter(content => content.id !== 5), { id: 5, msg: \"New password can't be empty!!!\" }]);\r\n\t\t\tsetValidNewPassword(false);\r\n\t\t} else if (newPassword.length < 6) {\r\n\t\t\tsetContents(contents => [...contents.filter(content => content.id !== 5), { id: 5, msg: \"New password must have at least 6 characters!!!\" }]);\r\n\t\t\tsetValidNewPassword(false);\r\n\t\t} else {\r\n\t\t\tsetContents(contents.filter(content => content.id !== 5));\r\n\t\t\tsetValidNewPassword(true);\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleClickOpen = () => {\r\n\t\tsetOpen(true);\r\n\t\tsetContents([\r\n\t\t\t{ id: 4, msg: \"Password can't be empty!!!\" },\r\n\t\t\t{ id: 5, msg: \"New password can't be empty!!!\" },\r\n\t\t]);\r\n\t};\r\n\r\n\tconst handleClose = () => {\r\n\t\tsetOpen(false);\r\n\t\tsetCurrentPassword(\"\");\r\n\t\tsetNewPassword(\"\");\r\n\t\tsetShowSnackBar(false);\r\n\t};\r\n\r\n\tconst handleChangePassword = async (event) => {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tif (!validCurentPassword || !validNewPassword) {\r\n\t\t\tsetShowSnackBar(true);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst data = {\r\n\t\t\t\tCurrentPassword: currentPassword,\r\n\t\t\t\tNewPassword: newPassword\r\n\t\t\t}\r\n\t\t\tconst res = await fetch(`${API_URL}/users/profile/updatepassword/${userID}`, {\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t\tAuthorization: `Bearer ${token}`\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify(data),\r\n\t\t\t});\r\n\r\n\t\t\t// const result = await res.json();\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tsetShowSnackBar(true);\r\n\t\t\t} else {\r\n\t\t\t\tsetShowSnackBar(true);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<SimpleSnackbar open={showSnackbar} setOpen={(isOpen) => setShowSnackBar(isOpen)} contents={contents} />\r\n\r\n\t\t\t<Button fullWidth variant=\"outlined\" color=\"secondary\" onClick={handleClickOpen} startIcon={<SaveIcon />}>\r\n\t\t\t\tChange password\r\n      </Button>\r\n\t\t\t<Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n\t\t\t\t<form >\r\n\t\t\t\t\t<DialogTitle id=\"form-dialog-title\">Change password</DialogTitle>\r\n\t\t\t\t\t<DialogContent>\r\n\t\t\t\t\t\t<div className={classes.container}>\r\n\t\t\t\t\t\t\t<Typography className={classes.floatLeft} align=\"left\" component=\"h2\"><b> Current password:</b> </Typography>\r\n\t\t\t\t\t\t\t{validCurentPassword ?\r\n\t\t\t\t\t\t\t\t<></>\r\n\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t<Typography className={classes.floatRight} align=\"right\" style={{ color: \"red\" }}>Invalid</Typography>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<TextField variant=\"outlined\" autoFocus margin=\"normal\" type=\"password\" fullWidth\r\n\t\t\t\t\t\t\tonChange={(event) => { handleCurrentPasswordChange(event.target.value); }}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t<div className={classes.container}>\r\n\t\t\t\t\t\t\t<Typography className={classes.floatLeft} align=\"left\" component=\"h2\"><b> New password:</b> </Typography>\r\n\t\t\t\t\t\t\t{validNewPassword ?\r\n\t\t\t\t\t\t\t\t<></>\r\n\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t<Typography className={classes.floatRight} align=\"right\" style={{ color: \"red\" }}>Invalid</Typography>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<TextField variant=\"outlined\" margin=\"normal\" type=\"password\" fullWidth\r\n\t\t\t\t\t\t\tonChange={(event) => { handleNewPasswordChange(event.target.value); }}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Typography>Password must have at least 6 characters</Typography>\r\n\r\n\t\t\t\t\t</DialogContent>\r\n\t\t\t\t\t<DialogActions>\r\n\t\t\t\t\t\t<Button onClick={handleChangePassword} color=\"secondary\">\r\n\t\t\t\t\t\t\tUpdate\r\n            </Button>\r\n\t\t\t\t\t\t<Button onClick={handleClose} color=\"primary\">\r\n\t\t\t\t\t\t\tCancel\r\n           </Button>\r\n\t\t\t\t\t</DialogActions>\r\n\t\t\t\t</form>\r\n\t\t\t</Dialog>\r\n\t\t</div>\r\n\t);\r\n}\r\n","D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\components\\Dialogs\\ImageUploadDialog\\index.js",[],"D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\utils\\helper.js",[],"D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\components\\SnackBar\\snackbar.js",[],"D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\components\\UserManagement\\index.js",["118","119","120","121"],"import React, { useState, useEffect } from 'react';\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Input from '@material-ui/core/Input';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Container from '@material-ui/core/Container';\r\nimport { authen } from '../../utils/helper';\r\nimport config from '../../constants/config.json';\r\nconst API_URL = config.API_URL_TEST;\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tcontainer: {\r\n\t\tpaddingTop: theme.spacing(4),\r\n\t\tpaddingBottom: theme.spacing(4),\r\n\t},\r\n\ttableHeader: {\r\n\t\tfontWeight: 'bolder',\r\n\t\tfontSize: '18px'\r\n\t},\r\n\tshadow: {\r\n\t\tboxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\r\n\t},\r\n\trow: {\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center'\r\n\t},\r\n\thover: {\r\n\t\tcursor: 'pointer',\r\n\t\t\"&:hover\": {\r\n\t\t\tbackgroundColor: \"#f1f3f4\"\r\n\t\t}\r\n\t}\r\n}));\r\n\r\nexport default function UserManagement() {\r\n\tconst classes = useStyles();\r\n\tconst history = useHistory();\r\n\tconst token = window.localStorage.getItem('jwtToken');\r\n\r\n\tconst [users, setUsers] = useState([]);\r\n\tconst [displayedUsers, setDisplayedUsers] = useState([]);\r\n\tconst [nameInput, setNameInput] = useState(\"\");\r\n\tconst [emailInput, setEmailInput] = useState(\"\");\r\n\r\n\tuseEffect(() => {\r\n\t\tasync function retrieveUsers() {\r\n\t\t\tconst res = await fetch(`${API_URL}/management/users`, {\r\n\t\t\t\tmethod: 'GET',\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t\tAuthorization: `Bearer ${token}`\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tconst result = await res.json();\r\n\t\t\t\tsetUsers(result.users);\r\n\t\t\t\tsetDisplayedUsers(result.users);\r\n\t\t\t}\r\n\t\t}\r\n\t\tasync function Authen() {\r\n\t\t\tconst status = await authen();\r\n\t\t\tif (status === 401) {\r\n\t\t\t\thistory.push('/signIn');\r\n\t\t\t} else {\r\n\t\t\t\tretrieveUsers();\r\n\t\t\t}\r\n\t\t}\r\n\t\tAuthen();\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (nameInput === \"\") {\r\n\t\t\tsetDisplayedUsers(users.slice().filter(user => user.Email.toLowerCase().includes(emailInput)));\r\n\t\t} else if (emailInput === \"\") {\r\n\t\t\tsetDisplayedUsers(users.slice().filter(user => user.Name.toLowerCase().includes(nameInput)));\r\n\t\t} else {\r\n\t\t\tsetDisplayedUsers(users.slice().filter(user => user.Name.toLowerCase().includes(nameInput) && user.Email.toLowerCase().includes(emailInput)));\r\n\t\t}\r\n\t}, [nameInput, emailInput]);\r\n\r\n\tconst handleToUserDetail = (userID) => {\r\n\t\tconst userDetail = window.open(`/users/${userID}`, \"_blank\");\r\n\t\tuserDetail.focus();\r\n\t}\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<Container maxWidth=\"lg\" className={classes.container}>\r\n\t\t\t\t<Grid item xs={12} md={12} sm={12}>\r\n\t\t\t\t\t<Paper className={classes.shadow}>\r\n\t\t\t\t\t\t<div style={{ justifyContent: 'space-between', padding: '10px' }} className={classes.row} >\r\n\r\n\t\t\t\t\t\t\t<Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom style={{ padding: '10px', fontWeight: 'bold', textAlign: 'left' }}>\r\n\t\t\t\t\t\t\t\tUsers on your system\r\n\t\t\t\t\t\t\t</Typography>\r\n\r\n\t\t\t\t\t\t\t<div className={classes.row} style={{ width: '60%' }}>\r\n\t\t\t\t\t\t\t\t<SearchIcon />\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tstyle={{ marginTop: '-10px', marginRight: '20px' }}\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Search by name...\"\r\n\t\t\t\t\t\t\t\t\tinputProps={{ 'aria-label': 'search' }}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => { setNameInput(e.target.value.toLowerCase()) }}\r\n\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<SearchIcon />\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tstyle={{ marginTop: '-10px' }}\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Search by email...\"\r\n\t\t\t\t\t\t\t\t\tinputProps={{ 'aria-label': 'search' }}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => { setEmailInput(e.target.value.toLowerCase()) }}\r\n\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<TableContainer style={{ maxHeight: '70vh' }}>\r\n\t\t\t\t\t\t\t<Table stickyHeader size=\"small\">\r\n\t\t\t\t\t\t\t\t<TableHead>\r\n\t\t\t\t\t\t\t\t\t<TableRow >\r\n\t\t\t\t\t\t\t\t\t\t<TableCell className={classes.tableHeader}>ID</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t<TableCell className={classes.tableHeader}>Name</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t<TableCell className={classes.tableHeader}>Email</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t<TableCell className={classes.tableHeader}>Username</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t<TableCell className={classes.tableHeader}>Status</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t<TableCell className={classes.tableHeader} align=\"right\"></TableCell>\r\n\t\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t\t</TableHead>\r\n\t\t\t\t\t\t\t\t<TableBody>\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tdisplayedUsers.length === 0 ?\r\n\t\t\t\t\t\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TableCell style={{ textAlign: 'center' }} colSpan={6}>User not found</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t\t\t(displayedUsers.map((user, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst status = user.Status === -1 ? \"Inactive\" : (user.Status === 2 ? \"Banned\" : (user.Status === 0 ? \"Offlined\" : \"Onlined\"));\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TableRow key={index} onClick={() => handleToUserDetail(user.ID)} className={classes.hover}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell>{user.ID}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell>{user.Name}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell>{user.Email}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell>{user.Username}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell>{status}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell align=\"right\">{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tuser.Status !== -1 && user.Status !== 2 ?\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button variant=\"outlined\" color=\"secondary\" >Ban</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) :\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button variant=\"outlined\" color=\"primary\"> Unban</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t}))\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t</TableBody>\r\n\t\t\t\t\t\t\t</Table>\r\n\t\t\t\t\t\t</TableContainer>\r\n\t\t\t\t\t</Paper>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Container>\r\n\t\t</React.Fragment>\r\n\t);\r\n}","D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\components\\UserDetail\\index.js",["122","123"],"D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\components\\Dialogs\\PlayedGamesDialog\\index.js",["124","125","126","127","128"],"D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\components\\PlayedGame\\index.js",["129","130","131","132","133","134"],"D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\components\\PlayedGame\\Game\\board.js",[],"D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\components\\PlayedGame\\Game\\gameServices.js",[],"D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\components\\PlayedGame\\Game\\square.js",[],{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","severity":1,"message":"140","line":14,"column":12,"nodeType":"141","messageId":"142","endLine":14,"endColumn":27},{"ruleId":"139","severity":1,"message":"143","line":15,"column":12,"nodeType":"141","messageId":"142","endLine":15,"endColumn":23},{"ruleId":"139","severity":1,"message":"144","line":16,"column":12,"nodeType":"141","messageId":"142","endLine":16,"endColumn":27},{"ruleId":"139","severity":1,"message":"145","line":18,"column":12,"nodeType":"141","messageId":"142","endLine":18,"endColumn":17},{"ruleId":"146","severity":1,"message":"147","line":120,"column":6,"nodeType":"148","endLine":120,"endColumn":8,"suggestions":"149"},{"ruleId":"146","severity":1,"message":"150","line":139,"column":6,"nodeType":"148","endLine":139,"endColumn":17,"suggestions":"151"},{"ruleId":"146","severity":1,"message":"152","line":56,"column":6,"nodeType":"148","endLine":56,"endColumn":8,"suggestions":"153"},{"ruleId":"146","severity":1,"message":"154","line":18,"column":6,"nodeType":"148","endLine":18,"endColumn":8,"suggestions":"155"},{"ruleId":"139","severity":1,"message":"156","line":1,"column":27,"nodeType":"141","messageId":"142","endLine":1,"endColumn":36},{"ruleId":"139","severity":1,"message":"157","line":2,"column":10,"nodeType":"141","messageId":"142","endLine":2,"endColumn":14},{"ruleId":"139","severity":1,"message":"158","line":3,"column":10,"nodeType":"141","messageId":"142","endLine":3,"endColumn":14},{"ruleId":"146","severity":1,"message":"159","line":80,"column":5,"nodeType":"148","endLine":80,"endColumn":7,"suggestions":"160"},{"ruleId":"146","severity":1,"message":"161","line":90,"column":5,"nodeType":"148","endLine":90,"endColumn":28,"suggestions":"162"},{"ruleId":"146","severity":1,"message":"147","line":112,"column":5,"nodeType":"148","endLine":112,"endColumn":7,"suggestions":"163"},{"ruleId":"146","severity":1,"message":"150","line":130,"column":5,"nodeType":"148","endLine":130,"endColumn":16,"suggestions":"164"},{"ruleId":"139","severity":1,"message":"165","line":7,"column":8,"nodeType":"141","messageId":"142","endLine":7,"endColumn":21},{"ruleId":"139","severity":1,"message":"166","line":14,"column":8,"nodeType":"141","messageId":"142","endLine":14,"endColumn":20},{"ruleId":"139","severity":1,"message":"167","line":49,"column":8,"nodeType":"141","messageId":"142","endLine":49,"endColumn":15},{"ruleId":"139","severity":1,"message":"168","line":51,"column":16,"nodeType":"141","messageId":"142","endLine":51,"endColumn":24},{"ruleId":"146","severity":1,"message":"150","line":76,"column":5,"nodeType":"148","endLine":76,"endColumn":18,"suggestions":"169"},{"ruleId":"139","severity":1,"message":"170","line":35,"column":18,"nodeType":"141","messageId":"142","endLine":35,"endColumn":27},{"ruleId":"146","severity":1,"message":"171","line":48,"column":6,"nodeType":"148","endLine":48,"endColumn":8,"suggestions":"172"},{"ruleId":"146","severity":1,"message":"173","line":89,"column":6,"nodeType":"148","endLine":89,"endColumn":67,"suggestions":"174"},{"ruleId":"139","severity":1,"message":"175","line":120,"column":9,"nodeType":"141","messageId":"142","endLine":120,"endColumn":17},{"ruleId":"176","severity":1,"message":"177","line":146,"column":15,"nodeType":"178","endLine":148,"endColumn":17},{"ruleId":"176","severity":1,"message":"177","line":154,"column":15,"nodeType":"178","endLine":156,"endColumn":17},"no-native-reassign",["179"],"no-negated-in-lhs",["180"],"no-unused-vars","'currentPassword' is assigned a value but never used.","Identifier","unusedVar","'newPassword' is assigned a value but never used.","'confirmPassword' is assigned a value but never used.","'files' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history', 'token', and 'userID'. Either include them or remove the dependency array.","ArrayExpression",["181"],"React Hook useEffect has missing dependencies: 'token' and 'userID'. Either include them or remove the dependency array.",["182"],"React Hook useEffect has missing dependencies: 'history' and 'setIsLoggedIn'. Either include them or remove the dependency array. If 'setIsLoggedIn' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["183"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["184"],"'useEffect' is defined but never used.","'Link' is defined but never used.","'fade' is defined but never used.","React Hook useEffect has missing dependencies: 'history' and 'token'. Either include them or remove the dependency array.",["185"],"React Hook useEffect has a missing dependency: 'users'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setDisplayedUsers' needs the current value of 'users'.",["186"],["187"],["188"],"'DialogActions' is defined but never used.","'ListItemIcon' is defined but never used.","'history' is assigned a value but never used.","'setDense' is assigned a value but never used.",["189"],"'setPlayer' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'History'. Either include it or remove the dependency array.",["190"],"React Hook useEffect has missing dependencies: 'gameID' and 'token'. Either include them or remove the dependency array.",["191"],"'opponent' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"192","fix":"193"},{"desc":"194","fix":"195"},{"desc":"196","fix":"197"},{"desc":"198","fix":"199"},{"desc":"200","fix":"201"},{"desc":"202","fix":"203"},{"desc":"192","fix":"204"},{"desc":"194","fix":"205"},{"desc":"206","fix":"207"},{"desc":"208","fix":"209"},{"desc":"210","fix":"211"},"Update the dependencies array to be: [history, token, userID]",{"range":"212","text":"213"},"Update the dependencies array to be: [setAvatar, token, userID]",{"range":"214","text":"215"},"Update the dependencies array to be: [history, setIsLoggedIn]",{"range":"216","text":"217"},"Update the dependencies array to be: [history]",{"range":"218","text":"219"},"Update the dependencies array to be: [history, token]",{"range":"220","text":"221"},"Update the dependencies array to be: [nameInput, emailInput, users]",{"range":"222","text":"223"},{"range":"224","text":"213"},{"range":"225","text":"215"},"Update the dependencies array to be: [setGameList, token, userID]",{"range":"226","text":"227"},"Update the dependencies array to be: [History]",{"range":"228","text":"229"},"Update the dependencies array to be: [setGame, setHistory, setChatHistory, setAvatar1, setAvatar2, token, gameID]",{"range":"230","text":"231"},[3707,3709],"[history, token, userID]",[4193,4204],"[setAvatar, token, userID]",[1546,1548],"[history, setIsLoggedIn]",[499,501],"[history]",[2383,2385],"[history, token]",[2839,2862],"[nameInput, emailInput, users]",[3158,3160],[3575,3586],[2387,2400],"[setGameList, token, userID]",[1806,1808],"[History]",[3091,3152],"[setGame, setHistory, setChatHistory, setAvatar1, setAvatar2, token, gameID]"]