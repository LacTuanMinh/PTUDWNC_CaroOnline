[{"D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\index.js":"1","D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\App.js":"2","D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\Components\\Footer\\index.js":"3","D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\Components\\Home\\index.js":"4","D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\Components\\Profile\\index.js":"5","D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\Components\\SignIn\\index.js":"6","D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\Components\\Navbar\\index.js":"7","D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\Components\\Dialogs\\ChangePasswordDialog\\index.js":"8","D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\Components\\Dialogs\\ImageUploadDialog\\index.js":"9","D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\components\\Profile\\index.js":"10","D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\components\\Navbar\\index.js":"11","D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\components\\Home\\index.js":"12","D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\components\\SignIn\\index.js":"13","D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\components\\Footer\\index.js":"14","D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\components\\Dialogs\\ChangePasswordDialog\\index.js":"15","D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\components\\Dialogs\\ImageUploadDialog\\index.js":"16","D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\utils\\helper.js":"17","D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\components\\SnackBar\\snackbar.js":"18","D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\components\\UserManagement\\index.js":"19","D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\components\\UserDetail\\index.js":"20","D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\components\\Dialogs\\PlayedGamesDialog\\index.js":"21","D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\components\\PlayedGame\\index.js":"22","D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\components\\PlayedGame\\Game\\board.js":"23","D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\components\\PlayedGame\\Game\\gameServices.js":"24","D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\components\\PlayedGame\\Game\\square.js":"25","D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\components\\GameManagement\\index.js":"26"},{"size":175,"mtime":1607428977473,"results":"27","hashOfConfig":"28"},{"size":1826,"mtime":1609649070170,"results":"29","hashOfConfig":"28"},{"size":1211,"mtime":1607435342486,"results":"30","hashOfConfig":"28"},{"size":541,"mtime":1607516492314,"results":"31","hashOfConfig":"28"},{"size":9232,"mtime":1607518544218,"results":"32","hashOfConfig":"28"},{"size":4290,"mtime":1607518260457,"results":"33","hashOfConfig":"28"},{"size":2928,"mtime":1607516492338,"results":"34","hashOfConfig":"28"},{"size":5517,"mtime":1607240503905,"results":"35","hashOfConfig":"28"},{"size":1822,"mtime":1607516492313,"results":"36","hashOfConfig":"28"},{"size":10974,"mtime":1609515155021,"results":"37","hashOfConfig":"28"},{"size":4213,"mtime":1609644470968,"results":"38","hashOfConfig":"28"},{"size":2478,"mtime":1609644382281,"results":"39","hashOfConfig":"28"},{"size":5197,"mtime":1609644607096,"results":"40","hashOfConfig":"28"},{"size":1414,"mtime":1609559236150,"results":"41","hashOfConfig":"28"},{"size":5997,"mtime":1609580853243,"results":"42","hashOfConfig":"28"},{"size":1917,"mtime":1609337227125,"results":"43","hashOfConfig":"28"},{"size":1136,"mtime":1609645813638,"results":"44","hashOfConfig":"28"},{"size":1522,"mtime":1609644844619,"results":"45","hashOfConfig":"28"},{"size":8262,"mtime":1609649518693,"results":"46","hashOfConfig":"28"},{"size":7026,"mtime":1609570768061,"results":"47","hashOfConfig":"28"},{"size":3903,"mtime":1609648315350,"results":"48","hashOfConfig":"28"},{"size":8047,"mtime":1609651392356,"results":"49","hashOfConfig":"28"},{"size":892,"mtime":1609651281706,"results":"50","hashOfConfig":"28"},{"size":7437,"mtime":1609567248413,"results":"51","hashOfConfig":"28"},{"size":322,"mtime":1609567165565,"results":"52","hashOfConfig":"28"},{"size":7464,"mtime":1609651311430,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"pyl54a",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\index.js",[],["110","111"],"D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\App.js",[],"D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\Components\\Footer\\index.js",[],"D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\Components\\Home\\index.js",[],"D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\Components\\Profile\\index.js",[],"D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\Components\\SignIn\\index.js",[],"D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\Components\\Navbar\\index.js",[],"D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\Components\\Dialogs\\ChangePasswordDialog\\index.js",["112","113","114"],"D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\Components\\Dialogs\\ImageUploadDialog\\index.js",["115"],"D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\components\\Profile\\index.js",["116","117"],"import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport ChangePasswordDialog from '../Dialogs/ChangePasswordDialog';\r\nimport ImageUploadDialog from '../Dialogs/ImageUploadDialog';\r\nimport defaultAvatar from '../../images/defaultAvatar.jpg';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\r\nimport ReplayIcon from '@material-ui/icons/Replay';\r\nimport SimpleSnackbar from '../SnackBar/snackbar';\r\nimport config from '../../constants/config.json';\r\nimport { isBlankString, isEmailPattern } from '../../utils/helper';\r\n\r\nconst API_URL = config.API_URL_TEST;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  cardGrid: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  card: {\r\n    height: '100%',\r\n    flexDirection: 'column',\r\n  },\r\n  cardMedia: {\r\n    paddingTop: '25%',\r\n  },\r\n  cardHeader: {\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[700],\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(3),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: \"black\"//theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '75%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  container: {\r\n    display: 'inline-block',\r\n    width: '100%'\r\n  },\r\n  floatRight: {\r\n    float: \"right\",\r\n    width: '60%'\r\n  },\r\n  floatLeft: {\r\n    float: \"left\",\r\n    width: '40%'\r\n  },\r\n  paperLikeShadow: {\r\n    boxShadow: '0 4px 8px 5px rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\r\n  },\r\n  hidden: {\r\n    display: 'none'\r\n  }\r\n}));\r\n\r\nexport default function Profile() {\r\n  const classes = useStyles();\r\n  const userID = localStorage.getItem('userID');\r\n  const token = localStorage.getItem('jwtToken');\r\n  const history = useHistory();\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [validName, setValidName] = useState(true);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [validEmail, setValidEmail] = useState(true);\r\n  const [dateOfBirth, setDateOfBirth] = useState((new Date()).toISOString());\r\n  const [validDOB, setValidDOB] = useState(true);\r\n  const [avatar, setAvatar] = useState({});\r\n  const [info, setInfo] = useState({});\r\n  const [contents, setContents] = useState([]);\r\n  const [showSnackbar, setShowSnackBar] = useState(false);\r\n\r\n  useEffect(() => {\r\n    async function ComponentWillMount() {\r\n      const res = await fetch(`${API_URL}/users/profile/${userID}`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      });\r\n\r\n      if (res.status === 200) {\r\n        const result = await res.json();\r\n        setInfo(result.userInfo);\r\n        setName(result.userInfo.Name);\r\n        setEmail(result.userInfo.Email);\r\n        setAvatar(result.userInfo.Avatar);\r\n        setDateOfBirth(result.userInfo.DateOfBirth);\r\n      } else {\r\n        history.push('/signin');\r\n        return;\r\n      }\r\n\r\n    }\r\n    ComponentWillMount();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    async function retrieveAvatar() {\r\n      const res = await fetch(`${API_URL}/users/avatar/${userID}`, {\r\n        method: 'GET',\r\n        headers: {\r\n          ContentType: 'image/jpeg',\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      });\r\n\r\n      if (res.status === 200) {\r\n        const result = await res.blob();\r\n        console.log(result);\r\n        setAvatar(URL.createObjectURL(result));\r\n      }\r\n    }\r\n    retrieveAvatar();\r\n  }, [setAvatar]);\r\n\r\n  const handleNameChange = (name) => {\r\n    setName(name);\r\n    if (isBlankString(name)) {\r\n      setContents(contents => [...contents.filter(content => content.id !== 1), { id: 1, msg: \"Name field can't be empty!!!\" }]);\r\n      setValidName(false);\r\n    } else {\r\n      setContents(contents.filter(content => content.id !== 1));\r\n      setValidName(true);\r\n    }\r\n  }\r\n\r\n  const handleEmailChange = (email) => {\r\n    setEmail(email);\r\n    if (isBlankString(email)) {\r\n      setContents(contents => [...contents.filter(content => content.id !== 2), { id: 2, msg: \"Email field can't be empty!!!\" }]);\r\n      setValidEmail(false);\r\n    }\r\n    else if (!isEmailPattern(email)) {// === false\r\n      setContents(contents => [...contents.filter(content => content.id !== 2), { id: 2, msg: \"Email field doesn't match the email format!!!\" }]);\r\n      setValidEmail(false);\r\n    }\r\n    else {\r\n      setContents(contents.filter(content => content.id !== 2));\r\n      setValidEmail(true);\r\n    }\r\n  }\r\n\r\n  const handleDateChange = (date) => {\r\n    setDateOfBirth(date.toISOString());\r\n    const now = new Date().toISOString()\r\n    if (dateOfBirth < now) {\r\n      setContents(contents.filter(content => content.id !== 3));\r\n      setValidDOB(true);\r\n    }\r\n    else {\r\n      setContents(contents => [...contents.filter(content => content.id !== 3), { id: 3, msg: \"Invalid date!!!\" }]);\r\n      setValidDOB(false);\r\n    }\r\n  }\r\n\r\n  const handleSaveChange = async () => {\r\n    if (validDOB && validEmail && validName) {\r\n\r\n      const data = {\r\n        Name: name,\r\n        Email: email,\r\n        DateOfBirth: dateOfBirth\r\n      }\r\n\r\n      const res = await fetch(`${API_URL}/users/profile/updateinfo/${userID}`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify(data),\r\n      });\r\n\r\n      // const result = await res.json();\r\n\r\n      if (res.status === 200) {\r\n\r\n        const infoCopy = JSON.parse(JSON.stringify(info));\r\n\r\n        infoCopy.Name = data.Name;\r\n        infoCopy.Email = data.Email;\r\n        infoCopy.DateOfBirth = data.DateOfBirth;\r\n        setInfo(infoCopy);\r\n        setShowSnackBar(true);\r\n\r\n      } else {\r\n        // alert(\"Some error when updating!\")\r\n      }\r\n\r\n    } else {\r\n      setShowSnackBar(true);\r\n    }\r\n  }\r\n\r\n  const handleResetInfo = () => {\r\n    setName(info.Name);\r\n    setEmail(info.Email);\r\n    setDateOfBirth(info.DateOfBirth);\r\n    setValidEmail(true);\r\n    setValidName(true);\r\n    setValidDOB(true);\r\n    setContents([]);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <SimpleSnackbar open={showSnackbar} setOpen={(isOpen) => setShowSnackBar(isOpen)} contents={contents} />\r\n\r\n      <Container component=\"main\" maxWidth=\"lg\">\r\n        <Grid container spacing={2}>\r\n\r\n          <Grid item xs={12} md={5}>\r\n            <div className={classes.paper} style={{ padding: '20px' }}>\r\n              <img height={200} width={200} style={{ borderRadius: '8px' }} className={classes.paperLikeShadow}\r\n                src={avatar ? avatar : defaultAvatar} alt=\"User avatar\"\r\n              />\r\n              <ImageUploadDialog setAvatar={setAvatar} setShowSnackBar={setShowSnackBar} />\r\n            </div>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={7}>\r\n            <div className={classes.paper}>\r\n              <Typography component=\"h2\" variant=\"h5\">\r\n                YOUR PROFILE\r\n                <IconButton onClick={handleResetInfo} title=\"Reset information\" color=\"primary\" aria-label=\"add an alarm\" style={{ fontSize: 'large' }} >\r\n                  <ReplayIcon />\r\n                </IconButton>\r\n              </Typography>\r\n              <div className={classes.form} >\r\n\r\n                <div className={classes.container}>\r\n                  <Typography className={classes.floatLeft} align=\"left\" component=\"h2\"><b> Name:</b> </Typography>\r\n                  {validName ?\r\n                    <></>\r\n                    :\r\n                    <Typography className={classes.floatRight} align=\"right\" style={{ color: \"red\" }}>Invalid</Typography>\r\n                  }\r\n                </div>\r\n                <TextField variant=\"outlined\" margin=\"normal\" required fullWidth autoFocus\r\n                  placeholder=\"Username\" value={name}\r\n                  onChange={(event) => { handleNameChange(event.target.value); }}\r\n                />\r\n\r\n                <div className={classes.container}>\r\n                  <Typography className={classes.floatLeft} align=\"left\" component=\"h2\"> <b>Email:</b>  </Typography>\r\n                  {validEmail ?\r\n                    <></>\r\n                    :\r\n                    <Typography className={classes.floatRight} align=\"right\" style={{ color: \"red\" }}>Invalid</Typography>\r\n                  }\r\n                </div>\r\n                <TextField variant=\"outlined\" margin=\"normal\" required fullWidth\r\n                  id=\"email\" name=\"email\" placeholder=\"Email\" value={email}\r\n                  onChange={(event) => { handleEmailChange(event.target.value); }}\r\n                />\r\n\r\n                <div className={classes.container}>\r\n                  <Typography align=\"left\" component=\"h2\" className={classes.floatLeft}>\r\n                    <b>Date of Birth:</b>\r\n                  </Typography>\r\n                  {validDOB ?\r\n                    <></>\r\n                    :\r\n                    <Typography className={classes.floatRight} align=\"right\" style={{ color: \"red\" }}>Invalid</Typography>\r\n                  }\r\n                </div>\r\n\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils} >\r\n                  <KeyboardDatePicker\r\n                    // disableToolbar\r\n                    variant=\"inline\"\r\n                    format=\"dd/MM/yyyy\"\r\n                    margin=\"normal\"\r\n                    id=\"date-picker-inline\"\r\n                    fullWidth value={dateOfBirth}\r\n                    onChange={handleDateChange}\r\n                    KeyboardButtonProps={{\r\n                      'aria-label': 'change date',\r\n                    }}\r\n                    placeholder=\"Date of Birth\"\r\n                  />\r\n                </MuiPickersUtilsProvider>\r\n                <Button type=\"submit\" fullWidth variant=\"outlined\" color=\"primary\" onClick={handleSaveChange}\r\n                  className={classes.submit} startIcon={<SaveIcon />}\r\n                >\r\n                  Save Change\r\n                </Button>\r\n                <Typography align=\"left\" component=\"h2\" style={{ marginTop: 10, marginBottom: 12, fontWeight: 'bold' }}> Passowrd: </Typography>\r\n                <ChangePasswordDialog />\r\n              </div>\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\components\\Navbar\\index.js",["118"],"import React, { useEffect } from 'react';\r\nimport { NavLink, useHistory } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport logo from '../../images/caro.ico';\r\nimport config from '../../constants/config.json';\r\nconst API_URL = config.API_URL_TEST;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  icon: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  navLink: {\r\n    textDecoration: 'none',\r\n    paddingLeft: '5px'\r\n  },\r\n  button: {\r\n    color: 'white',\r\n    background: 'purple'\r\n  },\r\n  logo: {\r\n    width: '25px',\r\n    height: '25px',\r\n    marginRight: '10px'\r\n  }\r\n}));\r\n\r\nfunction Navbar({ isLoggedIn, setIsLoggedIn }) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const token = localStorage.getItem('jwtToken');\r\n\r\n  useEffect(() => {\r\n    function storageChange(event) {\r\n      if (event.key === 'jwtToken') {\r\n        if (event.newValue === null) {\r\n          setIsLoggedIn(false);\r\n          history.push('/signin');\r\n          return;\r\n\r\n        } else {\r\n          setIsLoggedIn(true);\r\n          history.push('/');\r\n          return;\r\n        }\r\n      }\r\n    }\r\n    window.addEventListener('storage', storageChange);\r\n    return () => {\r\n      window.removeEventListener('storage', storageChange);\r\n    }\r\n  }, []);\r\n\r\n  const logoutButtonClicked = async () => {\r\n    const data = {\r\n      userID: localStorage.getItem('userID')\r\n    }\r\n    const res = await fetch(`${API_URL}/users/signout`, {\r\n      method: 'POST',\r\n      body: JSON.stringify(data),\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n        'Content-Type': 'application/json',\r\n      }\r\n    });\r\n    if (res.status === 400) {\r\n      const result = await res.json();\r\n      alert(result.mesg);\r\n    }\r\n    else { // other status: 200, 401, ...\r\n      localStorage.removeItem('jwtToken');\r\n      localStorage.clear();\r\n      setIsLoggedIn(false);\r\n      history.push('/signin');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <AppBar position=\"static\" color=\"primary\">\r\n        <Toolbar>\r\n          <NavLink to=\"/\" style={{ display: 'inline-block', textDecoration: 'none', color: \"white\" }}>\r\n            <img className={classes.logo} src={logo} alt=\"This is my website logo\"></img>\r\n          </NavLink>\r\n\r\n          <Typography variant=\"h6\" color=\"inherit\" noWrap style={{ flex: 1 }}>\r\n            <NavLink to=\"/\" style={{ display: 'inline-block', textDecoration: 'none', color: \"white\" }}>\r\n              Caro Tournament\r\n            </NavLink>\r\n          </Typography>\r\n\r\n          <div>\r\n            <NavLink to='/' className={classes.navLink}>\r\n              <Button variant=\"contained\" color=\"secondary\">\r\n                <Typography style={{ fontWeight: 'bold' }}>Home</Typography>\r\n              </Button>\r\n            </NavLink>\r\n            {isLoggedIn ?\r\n              <React.Fragment>\r\n                <NavLink to='/profile' className={classes.navLink}>\r\n                  <Button variant=\"contained\" color=\"secondary\">\r\n                    <Typography style={{ fontWeight: 'bold' }}>Profile</Typography>\r\n                  </Button>\r\n                </NavLink>\r\n                <NavLink to='/' className={classes.navLink}>\r\n                  <Button variant=\"contained\" color=\"secondary\" onClick={logoutButtonClicked}>\r\n                    <Typography style={{ fontWeight: 'bold' }}>Sign Out</Typography>\r\n                  </Button>\r\n                </NavLink>\r\n              </React.Fragment> :\r\n              <React.Fragment>\r\n                <NavLink to='/signIn' className={classes.navLink}>\r\n                  <Button variant=\"contained\" color=\"secondary\">\r\n                    <Typography style={{ fontWeight: 'bold' }}>Sign In</Typography>\r\n                  </Button>\r\n                </NavLink>\r\n              </React.Fragment>}\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\components\\Home\\index.js",["119"],"D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\components\\SignIn\\index.js",[],"D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\components\\Footer\\index.js",[],"D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\components\\Dialogs\\ChangePasswordDialog\\index.js",[],"D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\components\\Dialogs\\ImageUploadDialog\\index.js",[],"D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\utils\\helper.js",[],"D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\components\\SnackBar\\snackbar.js",[],"D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\components\\UserManagement\\index.js",["120","121","122","123"],"D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\components\\UserDetail\\index.js",["124","125"],"import React, { useEffect, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport defaultAvatar from '../../images/defaultAvatar.jpg';\r\nimport PlayedGamesDialog from '../Dialogs/PlayedGamesDialog/index';\r\nimport config from '../../constants/config.json';\r\n\r\nconst API_URL = config.API_URL_TEST;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tcardGrid: {\r\n\t\tpaddingTop: theme.spacing(4),\r\n\t\tpaddingBottom: theme.spacing(4),\r\n\t},\r\n\tcard: {\r\n\t\theight: '100%',\r\n\t\tflexDirection: 'column',\r\n\t},\r\n\tcardMedia: {\r\n\t\tpaddingTop: '25%',\r\n\t},\r\n\tcardHeader: {\r\n\t\tbackgroundColor:\r\n\t\t\ttheme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[700],\r\n\t},\r\n\tcardContent: {\r\n\t\tflexGrow: 1,\r\n\t},\r\n\tpaper: {\r\n\t\tmarginTop: theme.spacing(3),\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\talignItems: 'center',\r\n\t},\r\n\tavatar: {\r\n\t\tmargin: theme.spacing(1),\r\n\t\tbackgroundColor: \"black\"//theme.palette.secondary.main,\r\n\t},\r\n\tform: {\r\n\t\twidth: '75%', // Fix IE 11 issue.\r\n\t\tmarginTop: theme.spacing(1),\r\n\t},\r\n\tsubmit: {\r\n\t\tmargin: theme.spacing(3, 0, 2),\r\n\t},\r\n\tcontainer: {\r\n\t\tdisplay: 'inline-block',\r\n\t\twidth: '100%'\r\n\t},\r\n\tfloatRight: {\r\n\t\tfloat: \"right\",\r\n\t\twidth: '60%'\r\n\t},\r\n\tfloatLeft: {\r\n\t\tfloat: \"left\",\r\n\t\twidth: '40%'\r\n\t},\r\n\tpaperLikeShadow: {\r\n\t\tboxShadow: '0 4px 8px 5px rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\r\n\t},\r\n\thidden: {\r\n\t\tdisplay: 'none'\r\n\t}\r\n}));\r\n\r\nexport default function UserDetail() {\r\n\tconst classes = useStyles();\r\n\tconst userID = useParams().userID; // not ID of the admin\r\n\tconst token = localStorage.getItem('jwtToken'); // token of admin\r\n\tconst history = useHistory();\r\n\tconst [name, setName] = useState(\"\");\r\n\tconst [email, setEmail] = useState(\"\");\r\n\tconst [dateOfBirth, setDateOfBirth] = useState((new Date()).toISOString());\r\n\tconst [avatar, setAvatar] = useState(\"\");\r\n\tconst [info, setInfo] = useState({});\r\n\r\n\tuseEffect(() => {\r\n\t\tasync function ComponentWillMount() {\r\n\t\t\tconst res = await fetch(`${API_URL}/management/users/${userID}`, {\r\n\t\t\t\tmethod: 'GET',\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t\tAuthorization: `Bearer ${token}`\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tconst result = await res.json();\r\n\t\t\t\tsetInfo(result.userInfo);\r\n\t\t\t\tsetName(result.userInfo.Name);\r\n\t\t\t\tsetEmail(result.userInfo.Email);\r\n\t\t\t\tsetAvatar(result.userInfo.Avatar);\r\n\t\t\t\tsetDateOfBirth(result.userInfo.DateOfBirth !== null ?\r\n\t\t\t\t\t(new Date(result.userInfo.DateOfBirth)).toLocaleDateString()\r\n\t\t\t\t\t:\r\n\t\t\t\t\t\"<Empty>\");\r\n\t\t\t} else {\r\n\t\t\t\thistory.push('/signIn');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\tComponentWillMount();\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tasync function retrieveAvatar() {\r\n\t\t\tconst res = await fetch(`${API_URL}/management/users/avatar/${userID}`, {\r\n\t\t\t\tmethod: 'GET',\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tContentType: 'image/jpeg',\r\n\t\t\t\t\tAuthorization: `Bearer ${token}`\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tconst result = await res.blob();\r\n\t\t\t\tsetAvatar(URL.createObjectURL(result));\r\n\t\t\t}\r\n\t\t}\r\n\t\tretrieveAvatar();\r\n\t}, [setAvatar]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Container component=\"main\" maxWidth=\"lg\">\r\n\t\t\t\t<Grid container spacing={4}>\r\n\t\t\t\t\t<Grid item xs={12} md={6}>\r\n\t\t\t\t\t\t<div className={classes.paper} style={{ padding: '20px' }}>\r\n\t\t\t\t\t\t\t<img height={200} width={200} style={{ borderRadius: '8px', margin: '20px' }} className={classes.paperLikeShadow}\r\n\t\t\t\t\t\t\t\tsrc={avatar ? avatar : defaultAvatar} alt=\"User avatar\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Card className={classes.paperLikeShadow} style={{ width: '70%', margin: '20px' }}>\r\n\t\t\t\t\t\t\t\t<CardHeader\r\n\t\t\t\t\t\t\t\t\ttitle={\r\n\t\t\t\t\t\t\t\t\t\t<Badge color=\"secondary\">\r\n\t\t\t\t\t\t\t\t\t\t\tAchivement\r\n                    </Badge>}\r\n\t\t\t\t\t\t\t\t\tclassName={classes.cardHeader}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t\t\t\t<table style={{ margin: '5px', width: '100%', fontSize: '18px' }}>\r\n\t\t\t\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td style={{ textAlign: 'right', fontWeight: 'bold', width: '50%' }}>Activated date:</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td style={{ textAlign: 'center', width: '50%' }}>{info.Username}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td style={{ textAlign: 'right', fontWeight: 'bold', width: '50%' }}>Elo mark:</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td style={{ textAlign: 'center', width: '50%' }}>{info.Elo}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td style={{ textAlign: 'right', fontWeight: 'bold' }}>Total play(s):</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td style={{ textAlign: 'center' }}>{info.PlayCount}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td style={{ textAlign: 'right', fontWeight: 'bold' }}>Winned play(s):</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td style={{ textAlign: 'center' }}>{info.WinCount}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t\t\t</CardContent>\r\n\t\t\t\t\t\t\t\t<CardActions>\r\n\t\t\t\t\t\t\t\t\t<PlayedGamesDialog userID={userID} />\r\n\t\t\t\t\t\t\t\t</CardActions>\r\n\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t<Grid item xs={12} md={6}>\r\n\t\t\t\t\t\t<div className={classes.paper}>\r\n\t\t\t\t\t\t\t<Typography component=\"h2\" variant=\"h5\">\r\n\t\t\t\t\t\t\t\tUSER DETAIL\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<div className={classes.form} >\r\n\r\n\t\t\t\t\t\t\t\t<div className={classes.container}>\r\n\t\t\t\t\t\t\t\t\t<Typography className={classes.floatLeft} align=\"left\" component=\"h2\"><b> Name:</b> </Typography>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<TextField variant=\"outlined\" margin=\"normal\" fullWidth\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Name\" value={name} disabled\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<div className={classes.container}>\r\n\t\t\t\t\t\t\t\t\t<Typography className={classes.floatLeft} align=\"left\" component=\"h2\"> <b>Email:</b>  </Typography>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<TextField variant=\"outlined\" margin=\"normal\" fullWidth\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Email\" value={email} disabled\r\n\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t<div className={classes.container}>\r\n\t\t\t\t\t\t\t\t\t<Typography align=\"left\" component=\"h2\" className={classes.floatLeft}>\r\n\t\t\t\t\t\t\t\t\t\t<b>Date of Birth:</b>\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<TextField variant=\"outlined\" margin=\"normal\" disabled fullWidth\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Date of birth\" value={dateOfBirth !== null ? dateOfBirth : \"<Empty>\"}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<div className={classes.container}>\r\n\t\t\t\t\t\t\t\t\t<Typography align=\"left\" component=\"h2\" className={classes.floatLeft}>\r\n\t\t\t\t\t\t\t\t\t\t<b>Activated date:</b>\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<TextField variant=\"outlined\" margin=\"normal\" disabled fullWidth\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Activated dare\" value={\"abc\"}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Container>\r\n\t\t</>\r\n\t);\r\n}\r\n","D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\components\\Dialogs\\PlayedGamesDialog\\index.js",["126","127","128"],"D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\components\\PlayedGame\\index.js",["129","130"],"D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\components\\PlayedGame\\Game\\board.js",[],"D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\components\\PlayedGame\\Game\\gameServices.js",[],"D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\components\\PlayedGame\\Game\\square.js",[],"D:\\Github\\PTUDWNC_CaroOnline\\caro_app_admin\\src\\components\\GameManagement\\index.js",["131","132","133"],{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":14,"column":12,"nodeType":"140","messageId":"141","endLine":14,"endColumn":27},{"ruleId":"138","severity":1,"message":"142","line":15,"column":12,"nodeType":"140","messageId":"141","endLine":15,"endColumn":23},{"ruleId":"138","severity":1,"message":"143","line":16,"column":12,"nodeType":"140","messageId":"141","endLine":16,"endColumn":27},{"ruleId":"138","severity":1,"message":"144","line":18,"column":12,"nodeType":"140","messageId":"141","endLine":18,"endColumn":17},{"ruleId":"145","severity":1,"message":"146","line":120,"column":6,"nodeType":"147","endLine":120,"endColumn":8,"suggestions":"148"},{"ruleId":"145","severity":1,"message":"149","line":139,"column":6,"nodeType":"147","endLine":139,"endColumn":17,"suggestions":"150"},{"ruleId":"145","severity":1,"message":"151","line":56,"column":6,"nodeType":"147","endLine":56,"endColumn":8,"suggestions":"152"},{"ruleId":"145","severity":1,"message":"153","line":18,"column":6,"nodeType":"147","endLine":18,"endColumn":8,"suggestions":"154"},{"ruleId":"145","severity":1,"message":"155","line":89,"column":5,"nodeType":"147","endLine":89,"endColumn":7,"suggestions":"156"},{"ruleId":"145","severity":1,"message":"157","line":99,"column":5,"nodeType":"147","endLine":99,"endColumn":28,"suggestions":"158"},{"ruleId":"138","severity":1,"message":"159","line":116,"column":10,"nodeType":"140","messageId":"141","endLine":116,"endColumn":19},{"ruleId":"138","severity":1,"message":"159","line":143,"column":10,"nodeType":"140","messageId":"141","endLine":143,"endColumn":19},{"ruleId":"145","severity":1,"message":"146","line":112,"column":5,"nodeType":"147","endLine":112,"endColumn":7,"suggestions":"160"},{"ruleId":"145","severity":1,"message":"149","line":130,"column":5,"nodeType":"147","endLine":130,"endColumn":16,"suggestions":"161"},{"ruleId":"138","severity":1,"message":"162","line":3,"column":10,"nodeType":"140","messageId":"141","endLine":3,"endColumn":20},{"ruleId":"138","severity":1,"message":"163","line":48,"column":16,"nodeType":"140","messageId":"141","endLine":48,"endColumn":24},{"ruleId":"145","severity":1,"message":"149","line":73,"column":5,"nodeType":"147","endLine":73,"endColumn":18,"suggestions":"164"},{"ruleId":"145","severity":1,"message":"165","line":47,"column":6,"nodeType":"147","endLine":47,"endColumn":8,"suggestions":"166"},{"ruleId":"145","severity":1,"message":"167","line":88,"column":6,"nodeType":"147","endLine":88,"endColumn":67,"suggestions":"168"},{"ruleId":"138","severity":1,"message":"169","line":14,"column":8,"nodeType":"140","messageId":"141","endLine":14,"endColumn":14},{"ruleId":"145","severity":1,"message":"155","line":101,"column":6,"nodeType":"147","endLine":101,"endColumn":8,"suggestions":"170"},{"ruleId":"145","severity":1,"message":"171","line":109,"column":6,"nodeType":"147","endLine":109,"endColumn":17,"suggestions":"172"},"no-native-reassign",["173"],"no-negated-in-lhs",["174"],"no-unused-vars","'currentPassword' is assigned a value but never used.","Identifier","unusedVar","'newPassword' is assigned a value but never used.","'confirmPassword' is assigned a value but never used.","'files' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history', 'token', and 'userID'. Either include them or remove the dependency array.","ArrayExpression",["175"],"React Hook useEffect has missing dependencies: 'token' and 'userID'. Either include them or remove the dependency array.",["176"],"React Hook useEffect has missing dependencies: 'history' and 'setIsLoggedIn'. Either include them or remove the dependency array. If 'setIsLoggedIn' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["177"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["178"],"React Hook useEffect has missing dependencies: 'history' and 'token'. Either include them or remove the dependency array.",["179"],"React Hook useEffect has a missing dependency: 'users'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setDisplayedUsers' needs the current value of 'users'.",["180"],"'usersCopy' is assigned a value but never used.",["181"],["182"],"'useHistory' is defined but never used.","'setDense' is assigned a value but never used.",["183"],"React Hook useEffect has a missing dependency: 'History'. Either include it or remove the dependency array.",["184"],"React Hook useEffect has missing dependencies: 'gameID' and 'token'. Either include them or remove the dependency array.",["185"],"'Button' is defined but never used.",["186"],"React Hook useEffect has a missing dependency: 'games'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setDisplayedGames' needs the current value of 'games'.",["187"],"no-global-assign","no-unsafe-negation",{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},{"desc":"194","fix":"195"},{"desc":"196","fix":"197"},{"desc":"198","fix":"199"},{"desc":"188","fix":"200"},{"desc":"190","fix":"201"},{"desc":"202","fix":"203"},{"desc":"204","fix":"205"},{"desc":"206","fix":"207"},{"desc":"196","fix":"208"},{"desc":"209","fix":"210"},"Update the dependencies array to be: [history, token, userID]",{"range":"211","text":"212"},"Update the dependencies array to be: [setAvatar, token, userID]",{"range":"213","text":"214"},"Update the dependencies array to be: [history, setIsLoggedIn]",{"range":"215","text":"216"},"Update the dependencies array to be: [history]",{"range":"217","text":"218"},"Update the dependencies array to be: [history, token]",{"range":"219","text":"220"},"Update the dependencies array to be: [nameInput, emailInput, users]",{"range":"221","text":"222"},{"range":"223","text":"212"},{"range":"224","text":"214"},"Update the dependencies array to be: [setGameList, token, userID]",{"range":"225","text":"226"},"Update the dependencies array to be: [History]",{"range":"227","text":"228"},"Update the dependencies array to be: [setGame, setHistory, setChatHistory, setAvatar1, setAvatar2, token, gameID]",{"range":"229","text":"230"},{"range":"231","text":"220"},"Update the dependencies array to be: [games, nameInput]",{"range":"232","text":"233"},[3707,3709],"[history, token, userID]",[4193,4204],"[setAvatar, token, userID]",[1546,1548],"[history, setIsLoggedIn]",[562,564],"[history]",[2645,2647],"[history, token]",[3101,3124],"[nameInput, emailInput, users]",[3158,3160],[3575,3586],[2233,2246],"[setGameList, token, userID]",[1751,1753],"[History]",[3036,3097],"[setGame, setHistory, setChatHistory, setAvatar1, setAvatar2, token, gameID]",[2999,3001],[3217,3228],"[games, nameInput]"]